<UserControl x:Class="HLP.Components.View.WPF.HlpDatePicker"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ConvertLocal="clr-namespace:HLP.Components.View.WPF.Converter"
             mc:Ignorable="d" 
             d:DesignHeight="30" x:Name="ucDtPicker">
    <UserControl.Resources>
        <SolidColorBrush Color="#FF8C8C8C" x:Key="CinzaClaro"/>
        <SolidColorBrush x:Key="WhiteStandard" Color="White"/>
        <ConvertLocal:VisibilityDatePickerConverter x:Key="visDtPickerConverter"></ConvertLocal:VisibilityDatePickerConverter>
        <ConvertLocal:DateShortConverter x:Key="dtShortConverter"></ConvertLocal:DateShortConverter>
        <ConvertLocal:TimeSpanToString x:Key="tmShortConverter"></ConvertLocal:TimeSpanToString>
        <SolidColorBrush Color="#FF8C8C8C" x:Key="CinzaClaro"/>
        <Style x:Key="TextBoxComponentStyleDataPicker" TargetType="{x:Type TextBox}">
            <!--<Setter Property="Util:AutoSelectTextBoxAttachedProperty.AutoSelect" Value="True"/>-->
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>         
            <Setter Property="CharacterCasing" Value="Upper"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="TextBoxComponentStyle" TargetType="{x:Type TextBoxBase}">
                        <Border x:Name="border" BorderBrush="{StaticResource CinzaClaro}" BorderThickness="1.3" Background="{StaticResource WhiteStandard}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" VerticalAlignment="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Foreground="{StaticResource CinzaEscuro}" FontFamily="Segoe UI Symbol"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0.50"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BlueStandard}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BlueStandard}"/>
                            </Trigger>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Validation.ErrorTemplate">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <DockPanel LastChildFill="True">
                                                <Border Background="{StaticResource BackgroundError}" DockPanel.Dock="Right" Margin="5,0,0,0" Width="12" Height="12" CornerRadius="7"
                                                ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                                    <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center" FontWeight="Bold" Foreground="white"/>
                                                </Border>
                                                <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center">
                                                    <Border BorderBrush="Transparent" BorderThickness="1"></Border>
                                                </AdornedElementPlaceholder>
                                            </DockPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsVisible" Value="false">
                                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <StackPanel Orientation="Horizontal">
        <Border>
            <StackPanel Orientation="Horizontal">
                <TextBox x:Name="txtData" Width="80" BorderBrush="Transparent" Background="Transparent"
                 Text="{Binding ElementName=ucDtPicker, Path=xTextDate, Converter={StaticResource dtShortConverter}, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                 Visibility="{Binding ElementName=ucDtPicker, Path=stFormatoDtPicker,
            Converter={StaticResource visDtPickerConverter}, ConverterParameter=txtData}" Style="{StaticResource TextBoxComponentStyleDataPicker}" Margin="0"></TextBox>
                <TextBox x:Name="txtHora" Width="60" BorderBrush="Transparent" Background="Transparent"
                 Text="{Binding ElementName=ucDtPicker, Path=xTextTime, Converter={StaticResource tmShortConverter}, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"                        
                 Visibility="{Binding ElementName=ucDtPicker, Path=stFormatoDtPicker,
            Converter={StaticResource visDtPickerConverter}, ConverterParameter=txtHora}" Style="{StaticResource TextBoxComponentStyleDataPicker}" Margin="0">
                </TextBox>
            </StackPanel>
        </Border>
        <Button x:Name="btnCalendar" DockPanel.Dock="Right" Width="40" ContextMenuService.Placement="Right" Click="btnCalendar_Click"
                Visibility="{Binding ElementName=ucDtPicker, Path=stFormatoDtPicker,
            Converter={StaticResource visDtPickerConverter}, ConverterParameter=btnCalendar}" Background="{x:Null}" BorderBrush="{x:Null}">
            <Button.Template>
                <ControlTemplate>
                    <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Image x:Name="ImageAdd">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="pack://application:,,,/HLP.Comum.Resources;component/Icones/CalendarioComponent.png"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="pack://application:,,,/HLP.Comum.Resources;component/Icones/CalendarioComponentMouseOver.png"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Source" Value="pack://application:,,,/HLP.Comum.Resources;component/Icones/CalendarioComponentDisabled.png"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Border>
                </ControlTemplate>
            </Button.Template>
            <Button.ContextMenu>
                <ContextMenu>
                    <MenuItem Height="150">
                        <MenuItem.Template>
                            <ControlTemplate>
                                <Calendar x:Name="compCalendar"
                                    SelectedDatesChanged="Calendar_SelectedDatesChanged"></Calendar>
                            </ControlTemplate>
                        </MenuItem.Template>
                    </MenuItem>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>
    </StackPanel>
</UserControl>

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.32559
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HLP.Entries.ViewModel.ufService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ufService.IserviceUf")]
    public interface IserviceUf {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IserviceUf/getUf", ReplyAction="http://tempuri.org/IserviceUf/getUfResponse")]
        HLP.Entries.Model.Models.Gerais.UFModel getUf(int idUf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IserviceUf/getUf", ReplyAction="http://tempuri.org/IserviceUf/getUfResponse")]
        System.Threading.Tasks.Task<HLP.Entries.Model.Models.Gerais.UFModel> getUfAsync(int idUf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IserviceUf/saveUf", ReplyAction="http://tempuri.org/IserviceUf/saveUfResponse")]
        int saveUf(HLP.Entries.Model.Models.Gerais.UFModel objModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IserviceUf/saveUf", ReplyAction="http://tempuri.org/IserviceUf/saveUfResponse")]
        System.Threading.Tasks.Task<int> saveUfAsync(HLP.Entries.Model.Models.Gerais.UFModel objModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IserviceUf/deleteUf", ReplyAction="http://tempuri.org/IserviceUf/deleteUfResponse")]
        bool deleteUf(int idUf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IserviceUf/deleteUf", ReplyAction="http://tempuri.org/IserviceUf/deleteUfResponse")]
        System.Threading.Tasks.Task<bool> deleteUfAsync(int idUf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IserviceUfChannel : HLP.Entries.ViewModel.ufService.IserviceUf, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IserviceUfClient : System.ServiceModel.ClientBase<HLP.Entries.ViewModel.ufService.IserviceUf>, HLP.Entries.ViewModel.ufService.IserviceUf {
        
        public IserviceUfClient() {
        }
        
        public IserviceUfClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IserviceUfClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IserviceUfClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IserviceUfClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HLP.Entries.Model.Models.Gerais.UFModel getUf(int idUf) {
            return base.Channel.getUf(idUf);
        }
        
        public System.Threading.Tasks.Task<HLP.Entries.Model.Models.Gerais.UFModel> getUfAsync(int idUf) {
            return base.Channel.getUfAsync(idUf);
        }
        
        public int saveUf(HLP.Entries.Model.Models.Gerais.UFModel objModel) {
            return base.Channel.saveUf(objModel);
        }
        
        public System.Threading.Tasks.Task<int> saveUfAsync(HLP.Entries.Model.Models.Gerais.UFModel objModel) {
            return base.Channel.saveUfAsync(objModel);
        }
        
        public bool deleteUf(int idUf) {
            return base.Channel.deleteUf(idUf);
        }
        
        public System.Threading.Tasks.Task<bool> deleteUfAsync(int idUf) {
            return base.Channel.deleteUfAsync(idUf);
        }
    }
}

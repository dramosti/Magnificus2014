<Window x:Class="HLP.Sales.View.WPF.Comercial.StatusItensOrcamento"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        x:Name="wd"
        xmlns:util="clr-namespace:HLP.Sales.View.WPF.Util"
        xmlns:convLocal="clr-namespace:HLP.Sales.View.WPF.Converters"
        xmlns:convert="clr-namespace:HLP.Components.View.WPF.Converter;assembly=HLP.Components.View.WPF"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:ccx="clr-namespace:HLP.Components.ViewModel.ViewModels;assembly=HLP.Components.ViewModel"
        Title="Alterar Status Itens Orçamento" Height="400" Width="950" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" AllowsTransparency="True" WindowStyle="None" Background="{x:Null}">
    <Window.Resources>
        <convLocal:StatusItensOrcamentoVisibilityConverter x:Key="visibilityConverter"/>        
        <ObjectDataProvider x:Key="odp" ObjectType="{x:Type ccx:FillComboBoxViewModel}"/>
        <convert:ComboBoxDisplayConverter x:Key="cbxDisplayConv"/>
        <ObjectDataProvider x:Key="lresultProdutos" ObjectInstance="{StaticResource odp}" MethodName="GetAllValuesToComboBox">
            <ObjectDataProvider.MethodParameters>
                <System:String>vwProdutoToComboBox</System:String>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="lresultPerdaCanc" ObjectInstance="{StaticResource odp}" MethodName="GetAllValuesToComboBox">
            <ObjectDataProvider.MethodParameters>
                <System:String>vwMotivo_PerdaCanc_OrcamentoToComboBox</System:String>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Grid>
        <Rectangle Fill="#FF4774B5" Stroke="Black" StrokeThickness="1.3" RadiusY="20" RadiusX="20" MouseLeftButtonDown="Rectangle_MouseLeftButtonDown"></Rectangle>
        <DockPanel LastChildFill="True" Height="380" Width="930">
            <DockPanel Height="50" DockPanel.Dock="Bottom" LastChildFill="True">
                <DockPanel Height="50" Width="834"/>
                <StackPanel Height="50" VerticalAlignment="Center" DockPanel.Dock="Bottom" Orientation="Horizontal"  Margin="5.7,0,10,0">
                    <Button Width="40" Height="27" HorizontalAlignment="Right" Command="{Binding confirmarCommand}"
                    CommandParameter="{Binding ElementName=wd}" Margin="0,0,10,0">
                        <Button.Template>
                            <ControlTemplate>
                                <Border CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Image x:Name="ImageAdd">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Source" Value="pack://application:,,,/HLP.Resources.View.WPF;component/Images/Confirmar_preto.png"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Source" Value="pack://application:,,,/HLP.Resources.View.WPF;component/Images/Confirmar_MouseOver.png"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Width="40" Height="27" HorizontalAlignment="Right" Command="{Binding cancelarCommand}"
                            CommandParameter="{Binding ElementName=wd}">
                        <Button.Template>
                            <ControlTemplate>
                                <Border CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Image x:Name="ImageAdd">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Source" Value="pack://application:,,,/HLP.Resources.View.WPF;component/Images/Cancelar_preto.png"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Source" Value="pack://application:,,,/HLP.Resources.View.WPF;component/Images/Cancelar_MouseOver.png"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>
            </DockPanel>
            <DataGrid x:Name="grid"
                ItemsSource="{Binding lOrcamento_Itens}"
                  AutoGenerateColumns="False">
                <DataGrid.Resources>
                    <util:BindingProxy x:Key="proxy" Data="{Binding}" />
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Cód. do Item"
                                    Binding="{Binding codItem, Mode=OneWay}"
                                    IsReadOnly="True" Width="80"></DataGridTextColumn>
                    <DataGridTemplateColumn x:Name="clProdutos" IsReadOnly="True" Header="Produto"                                    
                                        Width="150" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=codProduto, Converter={StaticResource cbxDisplayConv}, 
                                                        ConverterParameter={StaticResource lresultProdutos}, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                                   />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <Grid FocusManager.FocusedElement="{Binding ElementName= elem}" >
                                    <ComboBox x:Name="elem"
                ItemsSource="{Binding Source={StaticResource lresultProdutos}}" 
                                                      SelectedValuePath="id"
                                            DisplayMemberPath="display"                                
            SelectedValue="{Binding codProduto, Mode=OneWay,
                                UpdateSourceTrigger=LostFocus}"
                                                      IsSynchronizedWithCurrentItem="False"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Qtd. pend/env." Width="90" Binding="{Binding quantEnvPend, Mode=OneWay}"></DataGridTextColumn>
                    <DataGridTemplateColumn x:Name="clDtHrInicialRevisao" IsReadOnly="True" Header="Prev. de entr." Width="90">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=dInicial}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <Grid FocusManager.FocusedElement="{Binding ElementName= dateScheduledPicker}" >
                                    <DatePicker x:Name="dateScheduledPicker" SelectedDate="{Binding Path=dataPrevEntrega, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,
                                                ValidatesOnExceptions=true, NotifyOnValidationError=true}" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn 
                        x:Name="clQuant"                        
                                        Width="90" Binding="{Binding quantItens, 
                        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DataContext.xHeaderQuant,
                       RelativeSource={RelativeSource AncestorType=DataGrid}}"></TextBlock>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn x:Name="clDtHrConf" Header="Data Confirm." Width="90">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=dataConf}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <Grid FocusManager.FocusedElement="{Binding ElementName= dateScheduledPicker}" >
                                    <DatePicker x:Name="dateScheduledPicker" SelectedDate="{Binding Path=dataConf, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                                                ValidatesOnExceptions=true, NotifyOnValidationError=true}" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Nº P.Compra Cli." Binding="{Binding numPedidoCompraCliente, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Visibility="{Binding Data.visibNumPedidoCliente, Converter={StaticResource visibilityConverter},
                        Source={StaticResource proxy}}"
                                        Width="100"></DataGridTextColumn>
                    <DataGridTemplateColumn x:Name="clCancPerda" Header="Motivo Perda/Canc"  
                                            Visibility="{Binding Data.visibMotivoPerdaCancel, Converter={StaticResource visibilityConverter},
                        Source={StaticResource proxy}}"
                                        Width="150">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=idMotivoPercaCanc, Converter={StaticResource cbxDisplayConv}, 
                                                        ConverterParameter={StaticResource lresultPerdaCanc}, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                                   />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <Grid FocusManager.FocusedElement="{Binding ElementName= elem}" >
                                    <ComboBox x:Name="elem"
                ItemsSource="{Binding Source={StaticResource lresultPerdaCanc}}" 
                                                      SelectedValuePath="id"
                                            DisplayMemberPath="display"                                
            SelectedValue="{Binding idMotivoPercaCanc, Mode=TwoWay,
                                UpdateSourceTrigger=LostFocus}"
                                                      IsSynchronizedWithCurrentItem="False"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Observação" Width="*" Binding="{Binding xObservacao, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
    </Grid>
</Window>

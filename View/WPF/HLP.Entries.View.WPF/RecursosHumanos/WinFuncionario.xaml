<runtime:WindowsBase
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:runtime="clr-namespace:HLP.Comum.View.Formularios;assembly=HLP.Comum.View"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:enums="clr-namespace:HLP.Comum.Resources.RecursosBases;assembly=HLP.Comum.Resources"
        xmlns:convert="clr-namespace:HLP.Comum.View.Converters;assembly=HLP.Comum.View"
        xmlns:Components="clr-namespace:HLP.Comum.View.Components;assembly=HLP.Comum.View" 
		xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:src="clr-namespace:HLP.Entries.ViewModel.ViewModels;assembly=HLP.Entries.ViewModel"
        xmlns:ccx="clr-namespace:HLP.Comum.ViewModel.ViewModels.Components;assembly=HLP.Comum.ViewModel"
		x:Class="HLP.Entries.View.WPF.RecursosHumanos.WinFuncionario"
        Title="Funcionario" Height="664" Width="1224" NameView="vwFuncionario">
    <runtime:WindowsBase.Resources>
        <convert:TimeSpanToString x:Key="timeSpanConverter"/>
        <convert:MaskConverter x:Key="maskConverter"/>
        <convert:OperacoesAritmetConverter x:Key="operacoesAritmetConverter"/>
        <convert:PorcentagemConverter x:Key="porcentagemConverter"/>
        <ObjectDataProvider
            MethodName="GetDict"
            ObjectType="{x:Type convert:EnumDescriptionConverter}"
            x:Key="EnumDescriptionDict">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:TipoEndereco"></x:Type>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider
            MethodName="GetDict"
            ObjectType="{x:Type convert:EnumDescriptionConverter}"
            x:Key="EnumDescriptionDictCertif">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:TipoCertificacao"></x:Type>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="odp" ObjectType="{x:Type ccx:FillComboBoxViewModel}"/>
        <ObjectDataProvider x:Key="lresultProdutos" ObjectInstance="{StaticResource odp}" MethodName="GetAllValuesToComboBox">
            <ObjectDataProvider.MethodParameters>
                <System:String>vwProdutoToComboBox</System:String>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="lresultCidades" ObjectInstance="{StaticResource odp}" MethodName="GetAllValuesToComboBox">
            <ObjectDataProvider.MethodParameters>
                <System:String>vwCidadeToComboBox</System:String>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F0F0F0" Offset="0.0"/>
            <GradientStop Color="#E5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#ECF4FC" Offset="0.0"/>
            <GradientStop Color="#DCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <Style x:Key="TabItem" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" BorderThickness="1,1,1,0" Margin="0" BorderBrush="White">
                                <Border x:Name="innerBorder" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </runtime:WindowsBase.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="601*"/>
            <ColumnDefinition Width="7*"/>
        </Grid.ColumnDefinitions>
        <ScrollViewer VerticalScrollBarVisibility="Auto" MinHeight="400" Grid.Row="1">
            <ItemsControl ItemsSource="{Binding SelectedUserControls}"/>
        </ScrollViewer>
        <TabControl  Background="{x:Null}" BorderBrush="#FF878484" Grid.ColumnSpan="2" Margin="0,10,0,-10" >

            <TabItem Header="Geral" Background="{x:Null}" BorderBrush="{x:Null}" Style="{DynamicResource TabItem}">
                <AdornerDecorator>
                    <Grid  >
                        <Expander Header="Identificação" HorizontalAlignment="Left" Height="354.57" VerticalAlignment="Top" Width="580" IsExpanded="True" Margin="5,0,0,0">
                            <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                                <Components:HlpTextBox
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.idFuncionario, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}" 
								Height="27" Margin="10,20,35,-1" Caption="Código de Origem do Funcionário" Field="idFuncionario" Help="Chave principal do registro do Funcionário" Table="Funcionario" WidthLabel="244"/>
                                <Components:HlpTextBox
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xCodigoAlternativo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,35,-1" Caption="Código Alternativo " Field="xCodigoAlternativo" Help="Digite um código alternativo para o Funcionário " Table="Funcionario" WidthLabel="142"/>
                                <Components:HlpCheckBox
								Validation.ErrorTemplate="{StaticResource exceptionComp}" 
								IsChecked="{Binding currentModel.Ativo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,243,-1" Caption="Ativo" Field="Ativo" Help="Informe o status do funcionário, se ele está ativo ou não para a empresa" Table="Funcionario" WidthLabel="49"/>
                                <Components:HlpTextBox
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xSaudacao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,35,-1" Caption="Saudação" Field="xSaudacao" Help="Especifique a forma de saudação preferencial de um funcionário" Table="Funcionario" WidthLabel="142"/>
                                <Components:HlpTextBox
								Validation.ErrorTemplate="{StaticResource exceptionComp}" 
								Text="{Binding currentModel.xNome, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,35,-1" Caption="Nome" Field="xNome" Help="Informe o nome do funcionário." Table="Funcionario" WidthLabel="142"/>
                                <Components:HlpPesquisa
                                Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.idCargo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,35,-1" Caption="Cargo" Field="idCargo" Help="Informe o Cargo do funcionário" Table="Cargo" WidthLabel="142" TableView="vwCargo" FieldPesquisa="ID">
                                    <Components:HlpPesquisa.Items>
                                        <System:String>xCargo</System:String>
                                        <System:String>xDescricao</System:String>
                                    </Components:HlpPesquisa.Items>
                                </Components:HlpPesquisa>
                                <Components:HlpPesquisa
								Validation.ErrorTemplate="{StaticResource exceptionComp}" 
								Text="{Binding currentModel.idDepartamento, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,35,-1" Caption="Departamento" Field="idDepartamento" Help="Informar o Departamento do funcionário" Table="Departamento" WidthLabel="142" FieldPesquisa="ID" TableView="vwDepartamento">
                                    <Components:HlpPesquisa.Items>
                                        <System:String>xDepartamento</System:String>
                                        <System:String>xDescricao</System:String>
                                    </Components:HlpPesquisa.Items>
                                </Components:HlpPesquisa>
                            </StackPanel>
                        </Expander>
                        <Expander Header="Administração" HorizontalAlignment="Left" Height="101.57" Margin="585,0,0,0" VerticalAlignment="Top" Width="549.5" IsExpanded="True">

                            <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="78.07" Margin="0,0,-2,0" >
                                <Components:HlpComboBox
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								SelectedIndex="{Binding currentModel.stPerfil, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,20,255,-1" FontFamily="/HLP.Entries.View.WPF;component/Fonts/#Segoe UI" Caption="Perfil do Usuário" Field="stPxerfil" Help="Informe o tipo de perfil do funcionário sendo:0-Centro de Trabalho, 1-Funcionário, 2-Prestador de Serviços, 3-Representante" Table="stPerfil" WidthLabel="128">
                                    <Components:HlpComboBox.Items>
                                        <System:String>0-Centro de Trabalho</System:String>
                                        <System:String>1-Funcionário</System:String>
                                        <System:String>2-Prestador de Serviços</System:String>
                                        <System:String>3-Representante</System:String>
                                    </Components:HlpComboBox.Items>
                                </Components:HlpComboBox>
                                <Components:HlpPesquisa
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.idCalendario, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,-1" Caption="Calendário" Field="idCalendário" Help="Informe um tipo de Calendário para o funcionário." Table="Calendario" WidthLabel="128" FieldPesquisa="ID" TableView="vwCalendario">
                                    <Components:HlpPesquisa.Items>
                                        <System:String>xNome</System:String>
                                        <System:String>xDescricao</System:String>
                                    </Components:HlpPesquisa.Items>
                                </Components:HlpPesquisa>
                            </StackPanel>
                        </Expander>
                        <Expander Header="Requisição de Compras" HorizontalAlignment="Left" Height="128.5" Margin="585,101.57,0,0" VerticalAlignment="Top" Width="549.5" IsExpanded="True">
                            <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                                <Components:HlpPesquisa
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.idSite, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,20,10,-1" Caption="Site Padrão" Field="idSite" Help="Selecione um site. Quando um funcionário criar uma requisição de compra, o site será automaticamente transferido para o cabeçalho e para as linhas da requisição de compra." Table="Site" WidthLabel="178" FieldPesquisa="ID" TableView="vwSite">
                                    <Components:HlpPesquisa.Items>
                                        <System:String>xSite</System:String>
                                        <System:String>xDescricao</System:String>
                                    </Components:HlpPesquisa.Items>
                                </Components:HlpPesquisa>
                                <Components:HlpPesquisa
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.idDeposito, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,-1" Caption="Depósito Padrão" Field="idDeposito" Help="Selecione um depósito. Quando um funcionário criar uma requisição de compra, o depósito será automaticamente transferido para o cabeçalho e para as linhas da requisição de compra" Table="Deposito" WidthLabel="178" FieldPesquisa="ID" TableView="vwDeposito">
                                    <Components:HlpPesquisa.Items>
                                        <System:String>xDeposito</System:String>
                                        <System:String>xDescricao</System:String>
                                    </Components:HlpPesquisa.Items>
                                </Components:HlpPesquisa>
                                <Components:HlpTextBox
								Validation.ErrorTemplate="{StaticResource exceptionComp}" 
								Text="{Binding currentModel.xInformacaoAtencao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,-1" Caption="Informações de Atenção" Field="xInformacaoAtencao" Help="Insira informações sobre endereço de entrega adicional para um funcionário como, por exemplo, localização do escritório. As informações de atenção são automaticamente transferidas para o cabeçalho e para as linhas da requisição de compra" Table="Funcionario" WidthLabel="178"/>
                            </StackPanel>
                        </Expander>
                    </Grid>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Endereços" Background="{x:Null}" BorderBrush="{x:Null}">
                <AdornerDecorator>
                    <Grid>
                        <DataGrid
                            Name="gridEnderecos"
						  ItemsSource="{Binding currentModel.lFuncionario_Endereco}"                          
                          IsEnabled="{Binding bIsEnabled}"
                          AutoGenerateColumns="False" 
                          SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
                          CanUserDeleteRows="True"
                          CanUserAddRows="True"
                        >
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn
                                Header="Tipo Endereço" Width="120"                                    
                                ItemsSource="{Binding Source={StaticResource EnumDescriptionDict}}"
                                DisplayMemberPath="Key"
                                SelectedValuePath="Value"
                                SelectedValueBinding="{Binding enumTipoEnder,
                                UpdateSourceTrigger=LostFocus}"></DataGridComboBoxColumn>
                                <DataGridTextColumn                                
                                Header="Endereço" Width="200"
                                ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xEndereco, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                                <DataGridTextColumn
                                Header="Cep" Width="100"
                                ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xCep, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, 
                                    ValidatesOnDataErrors=True, Converter={StaticResource maskConverter}, ConverterParameter=cep}"
                                ></DataGridTextColumn>
                                <DataGridTextColumn
                                Header="Nº" Width="50"
                                ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xNumero, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                                <DataGridTextColumn
                                Header="Complemento" Width="100"
                                ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xComplemento, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                                <DataGridTextColumn
                                Header="Bairro" Width="100"
                                    ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xBairro, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                                <DataGridTextColumn
                                Header="Latitude" Width="100"
                                    ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xLatitude, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                                <DataGridTextColumn
                                Header="Longitude" Width="100"
                                    ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xLongitude, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                                <DataGridTextColumn
                                Header="Fuso Horário" Width="100"
                                    ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xFusoHorario, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                                <DataGridTextColumn
                                Header="Caixa Postal" Width="100"
                                    ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xCaixaPostal, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                                <DataGridComboBoxColumn  Header="Cidades" Width="150"
                                ItemsSource="{Binding Source={StaticResource lresultCidades}}"
                                SelectedValuePath="id"
                                DisplayMemberPath="display"
                                SelectedValueBinding="{Binding idCidade, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                />
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Informações" Background="{x:Null}" BorderBrush="{x:Null}" Margin="-2,-2,-2,0">
                <AdornerDecorator>
                    <Grid					 
					ShowGridLines="True" ScrollViewer.CanContentScroll="True">
                        <Expander Header="Pessoais" HorizontalAlignment="Left" Height="243.04" VerticalAlignment="Top" Width="613" IsExpanded="True">
                            <Grid Margin="0,0,-2,0" Height="221.54">
                                <StackPanel HorizontalAlignment="Left" Height="236.54" VerticalAlignment="Top" Width="613" Margin="0,-15,0,0">
                                    <Components:HlpDateTimePicker
									Validation.ErrorTemplate="{StaticResource exceptionComp}"                                        
									SelectedDate="{Binding currentModel.dAniversario, Mode=TwoWay, 
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="12,15,338,-1" Caption="Data de Aniversário" 
                                        Field="dAniversario" Help="Informe a data de aniversário do funcionário." Table="Funcionario" WidthLabel="154">
                                    </Components:HlpDateTimePicker>
                                    <Components:HlpComboBox x:Name="cbxSexo"
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									SelectedIndex="{Binding currentModel.stSexo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,282,-1" Caption="Sexo" Field="stSexo" Help="Informe o sexo do funcionário" Table="Funcionario" WidthLabel="156">
                                        <Components:HlpComboBox.Items>
                                            <System:String>0-MASCULINO</System:String>
                                            <System:String>1-FEMININO</System:String>
                                        </Components:HlpComboBox.Items>
                                    </Components:HlpComboBox>
                                    <Components:HlpDateTimePicker
									Validation.ErrorTemplate="{StaticResource exceptionComp}" 
									SelectedDate="{Binding currentModel.dFalecimento, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,338,-1" Caption="Data de Falecimento" Field="dFalecimento" Help="Informe a data de falecimento do funcionário." Table="Funcionario" WidthLabel="156"/>
                                    <Components:HlpTextBox
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.xCpf, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,320,-1" Caption="CPF" Field="xCpf" Help="Informar o Cadastro de Pessoa Física do funcionário" Table="Funcionario" WidthLabel="156"/>
                                    <Components:HlpTextBox
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.xRg, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}" 
									Height="27" Margin="10,0,320,-1" Caption="RG" Field="xRg" Help="Informar o Registro Geral do funcionário" Table="Funcionario" WidthLabel="156"/>
                                    <Components:HlpTextBox	
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.xConjugue, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}" 
									Height="27" Margin="10,0,202,-1" Caption="Conjugue" Field="xConjugue" Help="Informar o nome do Conjugue do funcionário, quando houver" Table="Funcionario" WidthLabel="156"/>
                                    <Components:HlpTextBox 
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.xFilhos, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,202,-1" Caption="Filhos" Field="xFilhos" Help="Informar o nome dos filhos do funcionário, quando houver." Table="Funcionario" WidthLabel="156"/>
                                    <Components:HlpPesquisa 
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.idContaBancaria, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,30,-1" Caption="Conta Bancária" Field="idContaBancaria" Help="Informar a conta bancária do funcionário para eventual pagamento ou recebidos."
                                        Table="Funcionario" WidthLabel="156" FieldPesquisa="ID" TableView="vwContaBancaria">
                                        <Components:HlpPesquisa.Items>
                                            <System:String>xNumeroConta</System:String>
                                            <System:String>Agencia</System:String>
                                            <System:String>Banco</System:String>
                                            <System:String>stConta</System:String>
                                        </Components:HlpPesquisa.Items>
                                    </Components:HlpPesquisa>
                                </StackPanel>
                            </Grid>
                        </Expander>
                        <Expander Header="Visto de Trabalho" HorizontalAlignment="Left" Height="194.04" Margin="613,5,0,0" VerticalAlignment="Top" Width="558" IsExpanded="True" >
                            <Grid>
                                <StackPanel HorizontalAlignment="Left" Height="171.04" VerticalAlignment="Top" Width="556">
                                    <Components:HlpTextBox 
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.xVisto, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,10,227.5,-1" Caption="Visto" Field="xVisto" Help="Informar o Visto de permanência Brasileira do funcionário" Table="Funcionario" WidthLabel="133"/>
                                    <Components:HlpDateTimePicker 
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									SelectedDate="{Binding currentModel.dFinalVisto, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,307,-1" Caption="Data Final" Field="dFinalVisto" Help="Informar a data final do visto de permanência Brasileira do funcionário" Table="Funcionario" WidthLabel="133"/>
                                    <Components:HlpTextBox	
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.xVistoTrabalho, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,227.5,-1" Caption="Visto de Trabalho" Field="xVistoTrabalho" Help="Informar a data final do visto de trabalho do funcionário" Table="Funcionario" WidthLabel="133"/>
                                    <Components:HlpDateTimePicker
									Validation.ErrorTemplate="{StaticResource exceptionComp}" 
									SelectedDate="{Binding currentModel.dFinalVistoTrabalho, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,307,-1" Caption="Data Final" Field="dFinalVistoTrabalho" Help="Informar a data final do visto de trabalho do funcionário" Table="Funcionario" WidthLabel="133"/>
                                </StackPanel>
                            </Grid>
                        </Expander>
                        <Expander Header="Quantidade de Horas de Trabalho" HorizontalAlignment="Left" Height="270" Margin="0,243.04,0,0" VerticalAlignment="Top" Width="608" IsExpanded="True">
                            <Grid>
                                <Grid HorizontalAlignment="Left" Height="247" VerticalAlignment="Top" Width="645">
                                    <Components:HlpTextBox
                                        Name="txtHorasSegunda"
                                        Text="{Binding currentModel.dQtdHorasSegunda, Mode=TwoWay, Converter={StaticResource timeSpanConverter},
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
                                        Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Height="27" Margin="15.333,8,450.167,209" Caption="Segunda-Feira" Field="nQtdHorasSegunda" Help="Informar a quantidade de horas trabalhada" Table="Funcionario" WidthLabel="113"/>
                                    <Components:HlpTextBox
                                        Name="txtHorasTerca"
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.dQtdHorasTerca, Mode=TwoWay, Converter={StaticResource timeSpanConverter},
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="15.333,35.5,450.167,184.5" Field="nQtdHorasTerca" Caption="Terça-Feira" Help="Informar a quantidade de horas trabalhada" Table="Funcionario" WidthLabel="113"/>
                                    <Components:HlpTextBox
                                        Name="txtHorasQuarta"
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.dQtdHorasQuarta, Mode=TwoWay, Converter={StaticResource timeSpanConverter},
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="15.333,62.63,450.167,157.37" Field="nQtdHorasQuarta" Caption="Quarta-Feira" Help="Informar a quantidade de horas trabalhada" Table="Funcionario" WidthLabel="113"/>
                                    <Components:HlpTextBox
                                        Name="txtHorasQuinta"
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.dQtdHorasQuinta, Mode=TwoWay, Converter={StaticResource timeSpanConverter},
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="15.333,90.42,450.167,129.58" Caption="Quinta-Feira" Field="nQtdHorasQuinta" Help="Informar a quantidade de horas trabalhada" Table="Funcionario" WidthLabel="113"/>
                                    <Components:HlpTextBox 
                                        Name="txtHorasSexta"
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.dQtdHorasSexta, Mode=TwoWay, Converter={StaticResource timeSpanConverter},
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="15.333,117.42,450.167,102.58" Caption="Sexta-Feira" Field="nQtdHorasSexta" Help="Informar a quantidade de horas trabalhada" Table="Funcionario" WidthLabel="113"/>
                                    <Components:HlpTextBox 
                                        Name="txtHorasSabado"
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.dQtdHorasSabado, Mode=TwoWay, Converter={StaticResource timeSpanConverter},
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="257.5,10,105,210" Caption="Sábado" Field="nQtdHorasSabado" Help="Informar a quantidade de horas trabalhada" Table="Funcionario" WidthLabel="200"/>
                                    <Components:HlpTextBox 
                                        Name="txtHorasDomingo"									
									Text="{Binding currentModel.dQtdHorasDomingo, Mode=TwoWay, Converter={StaticResource timeSpanConverter},
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
                                        Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Height="27" Margin="257.5,36.749,105,183.25" Field="nQtdHorasDomingo" Caption="Domingo" Help="Informar a quantidade de horas trabalhada" Table="Funcionario" WidthLabel="200"/>
                                    <Components:HlpTextBox
                                        IsEnabled="False"
									Height="27" Margin="257.5,65.741,105,154.258" Caption="Total de Horas de Trabalho" 
                                        Help="O Sistema irá informar a quantidade de horas trabalhada na semana" Table="Funcionario" WidthLabel="200">
                                        <Components:HlpTextBox.Text>
                                            <MultiBinding Converter="{StaticResource operacoesAritmetConverter}" ConverterParameter="soma">
                                                <Binding ElementName="txtHorasSegunda" Path="Text"></Binding>
                                                <Binding ElementName="txtHorasTerca" Path="Text"></Binding>
                                                <Binding ElementName="txtHorasQuarta" Path="Text"></Binding>
                                                <Binding ElementName="txtHorasQuinta" Path="Text"></Binding>
                                                <Binding ElementName="txtHorasSexta" Path="Text"></Binding>
                                                <Binding ElementName="txtHorasSabado" Path="Text"></Binding>
                                                <Binding ElementName="txtHorasDomingo" Path="Text"></Binding>
                                            </MultiBinding>
                                        </Components:HlpTextBox.Text>
                                    </Components:HlpTextBox>

                                </Grid>
                            </Grid>
                        </Expander>
                        <Expander Header="Departamento Pessoal" HorizontalAlignment="Left" Height="350" Margin="618,243.04,0,0" VerticalAlignment="Top" Width="553" IsExpanded="True">
                            <Grid>
                                <StackPanel HorizontalAlignment="Left" Height="327" VerticalAlignment="Top" Width="551">
                                    <Components:HlpDateTimePicker 
									Validation.ErrorTemplate="{StaticResource exceptionComp}" 
									SelectedDate="{Binding currentModel.dAdmissao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,10,326.5,-1" Caption="Admissão" Field="dAdmissao" Help="Informar a data de Admissão do funcionário" Table="Funcionario" WidthLabel="117"/>
                                    <Components:HlpTextBox 
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.vDiaria, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,223.5,-1" Caption="Diaria" Field="vDiaria" Help="Informar o valor da diária do funcionário" Table="Funcionario" WidthLabel="117"/>
                                    <Components:HlpComboBox 									
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									SelectedIndex="{Binding currentModel.stSalario, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,223.5,-1" Caption="Tipo de Salário" Field="stSalario" Help="Informar se a condição de salario do  funcionário é:" Table="Funcionario" WidthLabel="117">
                                        <Components:HlpComboBox.Items>
                                            <System:String>0-Horista</System:String>
                                            <System:String>1-Mensalista</System:String>
                                        </Components:HlpComboBox.Items>
                                    </Components:HlpComboBox>
                                    <Components:HlpTextBox 
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.vSalario, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,223.5,-1" Caption="Salário" Field="vSalario" Help="Informar o valor mensal quando o campo Tipo de Salário tiver Mensalista ou valor hora quando o campo tipo de salário tiver horista." Table="Funcionario" WidthLabel="117"/>
                                    <Components:HlpTextBox 
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.vSalarioHora, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,223.5,-1" Caption="Salario Hora" Field="vSalarioHora" Help="Informar o valor do salário hora do funcionário" Table="Funcionario" WidthLabel="117"/>
                                    <Components:HlpPesquisa 
									Validation.ErrorTemplate="{StaticResource exceptionComp}"
									Text="{Binding currentModel.idResponsavel, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"	
									Height="27" Margin="10,0,129,-1" Caption="Responsável" Field="idResponsavel" Help="Informar o responsável pelo funcionário na empresa" Table="Funcionario" WidthLabel="117" FieldPesquisa="ID" TableView="vwFuncionario">
                                        <Components:HlpPesquisa.Items>
                                            <System:String>xCodigoAlternativo</System:String>
                                            <System:String>xNome</System:String>
                                        </Components:HlpPesquisa.Items>
                                    </Components:HlpPesquisa>
                                </StackPanel>
                            </Grid>
                        </Expander>
                    </Grid>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Informação de Contato" Background="{x:Null}" BorderBrush="{x:Null}" Margin="-2,-2,-2,0">
                <AdornerDecorator>
                    <Grid>
                        <Expander Header="Comercial" HorizontalAlignment="Left" Height="605.04" VerticalAlignment="Top" Width="452" IsExpanded="True">
                            <StackPanel HorizontalAlignment="Left" Height="585.02" Margin="0,0,-2,0" Width="452">
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xTelefoneComercial, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=tel,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,11,161.833,-1" Caption="Telefone Comercial" Field="xTelefoneComercial" Help="Insira o número do telefone comercial do funcionário." Table="Funcionario" WidthLabel="160"/>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xRamalComercial, Mode=TwoWay,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,161.833,-1" Caption="Ramal" Field="xRamalComercial" Help="Insira o número do Ramal do funcionário" Table="Funcionario" WidthLabel="160"/>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xCelularComercial, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=cel,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,161.833,-1" Caption="Celular" Field="xCelularComercial" Help="Insira o número do Celular do funcionário." Table="Funcionario" WidthLabel="160"/>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xRadioFoneComercial, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=tel,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,161.833,-1" Caption="Radio" Field="xRadioFoneComercial" Help="Insira o número do Radio do funcionário." Table="Funcionario" WidthLabel="160"/>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xPagerComercial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,161.833,-1" Caption="Pager" Field="xPagerComercial" Help="Insira o número do Pager do funcionário." Table="Funcionario" WidthLabel="160"/>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xFaxComercial, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=tel,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,161.833,-1" Caption="Fax" Field="xFaxComercial" Help="Insira o número do Fax do funcionário." Table="Funcionario" WidthLabel="160"/>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xEmailComercial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,54.833,-1" Caption="E-mail" Field="xEmailComercial" Help="Insira o e-mail do funcionário." Table="Funcionario" WidthLabel="159"/>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xSkypeComercial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,54.833,-1" Caption="Skype" Field="xSkypeComercial" Help="Insira o Skype do funcionário." Table="Funcionario" WidthLabel="159"/>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xMsnComercial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,54.833,-1" Caption="MSN" Field="xMSNComercial" Table="Funcionario" Help="Insira o MSN do funcionário." WidthLabel="159"/>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xHttpComercial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,54.833,-1" Caption="Endereço na Internet" Field="xhttpComercial" Help="Insira o endereço do Site da empresa do funcionário." Table="Funcionario" WidthLabel="159"/>
                            </StackPanel>
                        </Expander>
                        <Expander Header="Residencial" HorizontalAlignment="Left" Height="605.04" Margin="452,0,0,0" VerticalAlignment="Top" Width="416.5" IsExpanded="True">
                            <StackPanel HorizontalAlignment="Left" Height="576.77" Margin="0,0,-1,0" Width="415.5">
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xTelefoneResidencial, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=tel,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,10,124.5,-1" Caption="Telefone" Field="xTelefoneResidencial" Help="Insira o número do telefone particular do funcionário, caso possua." Table="Funcionario" WidthLabel="139"/>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xCelularResidencial, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=cel,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,124.5,-1" Caption="Celular " Field="xCelularResidencial" Help="Insira o número do Celular Particular do funcionário, caso possua." Table="Funcionario" WidthLabel="139"/>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xRadioFoneResidencial, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=tel,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,124.5,-1" Field="xRadioFoneResidencial" Caption="Radio" Help="Insira o endereço do Radio  pessoal do funcionário, caso possua." Table="Funcionario" WidthLabel="139"/>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xEmailResidencial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,45,-1" Caption="E-mail " Field="xEmailResidencial" Help="Insira o e-mail particular do funcionário, caso possua." Table="Funcionario" WidthLabel="139"/>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xSkypeResidencial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,45,-1" Caption="Skype" Field="xSkypeResidencial" Help="Insira o Skype particular do funcionário, caso possua." Table="Funcionario" WidthLabel="139"/>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.xMsnResidencial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,45,-1" Caption="MSN" Field="xMsnResidencial" Help="Insira o MSN particular do funcionário, caso possua." Table="Funcionario" WidthLabel="139"/>
                                <Components:HlpTextBox Height="30" Margin="10,0,45,-1" Caption="Home page pessoal" Field="XhttpPessoal" 
                                                       Help="Insira o endereço de internet  pessoal do funcionário, caso possua." Table="Funcionario"
                                                       IsEnabled="{Binding bIsEnabled}" WidthLabel="139"/>
                            </StackPanel>
                        </Expander>
                    </Grid>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Certificações" Background="{x:Null}" BorderBrush="{x:Null}" Margin="-2,-2,-2,0">
                <AdornerDecorator>
                    <Grid>
                        <DataGrid
                            Name="gridCertificacoes"
						  ItemsSource="{Binding currentModel.lFuncionario_Certificacao}"                          
                          IsEnabled="{Binding bIsEnabled}"
                          AutoGenerateColumns="False" 
                          SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
                          CanUserDeleteRows="True"
                          CanUserAddRows="True"
                            >
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn
                                Header="Tipo Certificação" Width="120"                                    
                                ItemsSource="{Binding Source={StaticResource EnumDescriptionDictCertif}}"
                                DisplayMemberPath="Key"
                                SelectedValuePath="Value"
                                SelectedValueBinding="{Binding enumTipoCertificacao,
                                UpdateSourceTrigger=LostFocus}"></DataGridComboBoxColumn>
                                <DataGridTextColumn                                
                                Header="Certificação" Width="200"
                                    ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xCertificacao, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                                <DataGridTextColumn                                
                                Header="Data de Conclusão" Width="200"
                                    ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=dConclusao, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter}, ConverterParameter=date,
                                    NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                                <DataGridTextColumn                                
                                Header="Data de Validade" Width="200"
                                    ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=dValidade, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter}, ConverterParameter=date,
                                    NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                                <DataGridTextColumn                                
                                Header="Memorando" Width="200"
                                    ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xMemorando, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Representantes" Background="{x:Null}" BorderBrush="{x:Null}" Margin="-2,-2,-2,0">
                <AdornerDecorator>
                    <Grid>
                        <Expander Header="Geral" HorizontalAlignment="Left" Height="134" VerticalAlignment="Top" Width="418" IsEnabled="True" IsExpanded="True">
                            <StackPanel HorizontalAlignment="Left" Height="145.04" Margin="0,0,-2,0" Width="417.5">
                                <Components:HlpComboBox 								
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								SelectedIndex="{Binding currentModel.stComissao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,10,37,-1" Caption="Tipo de Comissão" Field="stComissao" Help="Informar o tipo de comissão a ser calculada para o Representante, são elas: 0-Por Representante (Default) (Os valores de comissão Avista e Aprazo virão do cadastro de Funcionário da guia Representantes) 1-Por Lista de Preço (Quando por lista de preço o sistema buscará a comissão quando Avista e Aprazo das Listas de preços e depois o que define é os produtos da lista, caso tenha os campos de comissão preenchido) 2-Por Família de Produto (O sistema pegará as comissões do cadastro de Familia de Produto e todas as outras comissões serão descartadas pelo sistema) 3-Por Produto (Caso seja por produto definir no próprio formulário de funcionários os produtos relacionado a esse representantes e suas respectivas comissões, o sistema somente liberará a visualização dos produtos que estiverem cadastrado nessa tabela para o representante, outros produtos não cadastrado não poderão ser vendidos) 4-Por Faixa Margem de Venda Quando por faixa o sistema pegará o valor vendido pelo representante calculara a faixa de margem da venda e colocará na faixa que representa essa margem e chegará na comissão a vista ou a prazo." Table="Funcionario" WidthLabel="213">
                                    <Components:HlpComboBox.Items>
                                        <System:String>0-Por Representante</System:String>
                                        <System:String>1-Por Lista de Preço</System:String>
                                        <System:String>2-Por Família de Produto</System:String>
                                        <System:String>3-Por Produto</System:String>
                                        <System:String>4-Por Faixa Margem de Venda</System:String>
                                    </Components:HlpComboBox.Items>
                                </Components:HlpComboBox>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.pComissaoAvista, Mode=TwoWay,  StringFormat='\{0\}%', Converter={StaticResource porcentagemConverter},
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,47,-1" Caption="Percentual Comissão a Vista" Field="pComissaoAvista" Help="Informar a alíquota em percentual da comissão somente para valores a Vista, quando a condição de vendas for igual Avista Quando o Campo Condicao_Pagamento.stCondicao for igual Avista" Table="Funcionario" WidthLabel="213"/>
                                <Components:HlpTextBox 
								Validation.ErrorTemplate="{StaticResource exceptionComp}"
								Text="{Binding currentModel.pComissaoAprazo, Mode=TwoWay,  StringFormat='\{0\}%', Converter={StaticResource porcentagemConverter},
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,47,-1" Caption="Percentual Comissão a Prazo" Field="pComissaoAprazo" Help="Informar a alíquota em percentual da comissão somente para valores a Prazo, quando a Condicao_Pagamento.stCondicao for Aprazo. " Table="Funcionario" WidthLabel="213"/>
                            </StackPanel>
                        </Expander>
                        <Expander Header="Expander" HorizontalAlignment="Left" Height="484" Margin="0,121,0,-2" VerticalAlignment="Top" Width="1210">
                            <Grid>
                                <DataGrid
                                    Name="gridRepresentantes"
                                    ItemsSource="{Binding currentModel.lFuncionario_Comissao_Produto}"                          
                                    IsEnabled="{Binding bIsEnabled}"
                                    AutoGenerateColumns="False" 
                                    SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
                                    CanUserDeleteRows="True"
                                    CanUserAddRows="True"
                                    >
                                    <DataGrid.Columns>
                                        <DataGridComboBoxColumn  Header="Produtos" Width="150"
                                        ItemsSource="{Binding Source={StaticResource lresultProdutos}}"
                                        SelectedValuePath="id"
                                        DisplayMemberPath="display"
                                        SelectedValueBinding="{Binding idProduto, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                        />
                                        <DataGridTextColumn                                
                                        Header="% Comissão a Vista" Width="200"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissaoAvista, UpdateSourceTrigger=LostFocus,
                                            StringFormat='\{0\}%', Converter={StaticResource porcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                        <DataGridTextColumn                                
                                        Header="% Comissão a Prazo" Width="200"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissaoAprazo, UpdateSourceTrigger=LostFocus,
                                            StringFormat='\{0\}%', Converter={StaticResource porcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Expander>
                    </Grid>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Comissão / Faixa de lucro" Background="{x:Null}" BorderBrush="{x:Null}" Margin="-2,-2,-2,0">
                <AdornerDecorator>
                    <Grid>
                        <DataGrid
                            Name="gridComissoes"
                                    ItemsSource="{Binding currentModel.lFuncionario_Margem_Lucro_Comissao}"                          
                                    IsEnabled="{Binding bIsEnabled}"
                                    AutoGenerateColumns="False" 
                                    SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
                                    CanUserDeleteRows="True"
                                    CanUserAddRows="True"
                            >
                            <DataGrid.Columns>
                                <DataGridTextColumn                                
                                        Header="% Margem Venda 'De'" Width="200"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pDeMargemVenda, UpdateSourceTrigger=LostFocus,
                                            StringFormat='\{0\}%', Converter={StaticResource porcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                <DataGridTextColumn                                
                                        Header="% Margem Venda 'Até'" Width="200"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pAteMargemVenda, UpdateSourceTrigger=LostFocus,
                                            StringFormat='\{0\}%', Converter={StaticResource porcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                <DataGridTextColumn                                
                                        Header="% Comissão à Vista" Width="200"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissaoAvista, UpdateSourceTrigger=LostFocus,
                                            StringFormat='\{0\}%', Converter={StaticResource porcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                <DataGridTextColumn                                
                                        Header="% Comissão a Prazo" Width="200"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissaoAprazo, UpdateSourceTrigger=LostFocus,
                                            StringFormat='\{0\}%', Converter={StaticResource porcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>

                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Arquivos" Background="{x:Null}" BorderBrush="{x:Null}" Margin="-2,-2,-2,0">
                <AdornerDecorator>
                    <Grid>
                        <DataGrid
                            Name="gridArquivos"
                        ItemsSource="{Binding currentModel.lFuncionario_Arquivo}"                          
                          IsEnabled="{Binding bIsEnabled}"
                          AutoGenerateColumns="False" 
                          SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
                          CanUserDeleteRows="True"
                          CanUserAddRows="True"
                            >
                            <DataGrid.Columns>
                                <DataGridTextColumn                                
                                Header="Arquivo" Width="300"
                                    ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xArquivo, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                                <DataGridTextColumn                                
                                Header="Caminho" Width="400"
                                    ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xLink, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Hierarquia" Background="{x:Null}" BorderBrush="{x:Null}" Height="21.96" Width="71.027">
                <AdornerDecorator>
                    <Grid>
                        <TreeView HorizontalAlignment="Left" Height="424.04" VerticalAlignment="Top" Width="363"/>
                    </Grid>
                </AdornerDecorator>
            </TabItem>
        </TabControl>
    </Grid>
</runtime:WindowsBase>

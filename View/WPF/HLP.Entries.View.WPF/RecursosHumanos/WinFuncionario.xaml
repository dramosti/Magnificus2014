<runtime:WindowsBase
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:runtime="clr-namespace:HLP.Comum.View.Formularios;assembly=HLP.Comum.View"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:enums="clr-namespace:HLP.Comum.Resources.RecursosBases;assembly=HLP.Comum.Resources"
        xmlns:convert="clr-namespace:HLP.Comum.View.Converters;assembly=HLP.Comum.View"
        xmlns:convLocal="clr-namespace:HLP.Entries.View.WPF.RecursosHumanos.Converter"
        xmlns:Components="clr-namespace:HLP.Comum.View.Components;assembly=HLP.Comum.View" 
		xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:src="clr-namespace:HLP.Entries.ViewModel.ViewModels;assembly=HLP.Entries.ViewModel"
        xmlns:ccx="clr-namespace:HLP.Comum.ViewModel.ViewModels.Components;assembly=HLP.Comum.ViewModel"
		x:Class="HLP.Entries.View.WPF.RecursosHumanos.WinFuncionario"
        Title="Funcionários" Height="664" Width="1224" NameView="vwFuncionario">
    <runtime:WindowsBase.Resources>
        <convLocal:TabItemRepresentantesVisibilityConverter x:Key="tabItemRepresentanteVisibilityConv"></convLocal:TabItemRepresentantesVisibilityConverter>
        <convert:MoedaConverter x:Key="moedaConverter"></convert:MoedaConverter>
        <convert:TimeSpanToString x:Key="timeSpanConverter"/>
        <convert:NotConverter x:Key="notConverter"/>
        <convert:MaskConverter x:Key="maskConverter"/>
        <convert:OperacoesAritmetConverter x:Key="operacoesAritmetConverter"/>
        <convert:PorcentagemConverter x:Key="porcentagemConverter"/>
        <convert:ComboBoxDisplayConverter x:Key="cbxDisplayConv"/>
        <ObjectDataProvider
            MethodName="GetDict"
            ObjectType="{x:Type convert:EnumDescriptionConverter}"
            x:Key="EnumDescriptionDict">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:TipoEndereco"></x:Type>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider
            MethodName="GetDict"
            ObjectType="{x:Type convert:EnumDescriptionConverter}"
            x:Key="EnumDescriptionDictCertif">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:TipoCertificacao"></x:Type>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="odp" ObjectType="{x:Type ccx:FillComboBoxViewModel}"/>        
        <ObjectDataProvider x:Key="lresultProdutos" ObjectInstance="{StaticResource odp}" MethodName="GetAllValuesToComboBox">
            <ObjectDataProvider.MethodParameters>
                <System:String>vwProdutoToComboBox</System:String>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="lresultCidades" ObjectInstance="{StaticResource odp}" MethodName="GetAllValuesToComboBox">
            <ObjectDataProvider.MethodParameters>
                <System:String>vwCidadeToComboBox</System:String>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </runtime:WindowsBase.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="601*"/>
            <ColumnDefinition Width="7*"/>
        </Grid.ColumnDefinitions>
        <ScrollViewer VerticalScrollBarVisibility="Auto" MinHeight="400" Grid.Row="1">
            <ItemsControl ItemsSource="{Binding SelectedUserControls}"/>
        </ScrollViewer>
        <TabControl>
            <TabItem Header="Geral">
                <AdornerDecorator>
                    <DockPanel LastChildFill="True">
                        <DockPanel LastChildFill="True" DockPanel.Dock="Left">
                            <Expander Header="Identificação" IsExpanded="True" DockPanel.Dock="Top">
                                <WrapPanel Orientation="Vertical" Margin="0,10,0,0">
                                    <Components:HlpTextBox
								
								Text="{Binding currentModel.idFuncionario, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsReadOnly="True"
								Height="27" Margin="10,0,10,2" Caption="Código" Field="idFuncionario" Help="Chave principal do registro do Funcionário" Table="Funcionario" WidthLabel="200" HorizontalAlignment="Left" Width="330"/>
                                    <Components:HlpTextBox
								
								Text="{Binding currentModel.xCodigoAlternativo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,2" Caption="Código Alternativo " Field="xCodigoAlternativo" Help="Digite um código alternativo para o Funcionário " Table="Funcionario" WidthLabel="200" HorizontalAlignment="Left" Width="330"/>
                                    <Components:HlpCheckBox
								 
								IsChecked="{Binding currentModel.Ativo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,2" Caption="Ativo" Field="Ativo" Help="Informe o status do funcionário, se ele está ativo ou não para a empresa" Table="Funcionario" WidthLabel="200" HorizontalAlignment="Left"/>
                                    <Components:HlpTextBox
								
								Text="{Binding currentModel.xSaudacao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,2" Caption="Saudação" Field="xSaudacao" Help="Especifique a forma de saudação preferencial de um funcionário" Table="Funcionario" WidthLabel="200" HorizontalAlignment="Left" Width="450"/>
                                    <Components:HlpTextBox
								 
								Text="{Binding currentModel.xNome, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,2" Caption="Nome" Field="xNome" Help="Informe o nome do funcionário." Table="Funcionario" WidthLabel="200" HorizontalAlignment="Left" Width="450"/>
                                    <Components:HlpPesquisa
                                        nameWindow="WinCargo"
								Text="{Binding currentModel.idCargo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,2" Caption="Cargo" Field="idCargo" Help="Informe o Cargo do funcionário" Table="Cargo" WidthLabel="200" TableView="vwCargo" FieldPesquisa="ID" HorizontalAlignment="Left" Width="500">
                                        <Components:HlpPesquisa.Items>
                                            <System:String>xCargo</System:String>
                                            <System:String>xDescricao</System:String>                                            
                                        </Components:HlpPesquisa.Items>
                                    </Components:HlpPesquisa>
                                    <Components:HlpPesquisa
								 nameWindow="WinDepartamento"
								Text="{Binding currentModel.idDepartamento, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,2" Caption="Departamento" Field="idDepartamento" Help="Informar o Departamento do funcionário" Table="Departamento" WidthLabel="200" FieldPesquisa="ID" TableView="vwDepartamento" HorizontalAlignment="Left" Width="500">
                                        <Components:HlpPesquisa.Items>
                                            <System:String>xDepartamento</System:String>
                                            <System:String>xDescricao</System:String>
                                            <System:String>xSetor</System:String>
                                        </Components:HlpPesquisa.Items>
                                    </Components:HlpPesquisa>
                                    <Components:HlpUserControlBtnImage 
                                        IsEnabled="{Binding bIsEnabled}"
                                        byteImage="{Binding currentModel.imgFoto, Mode=TwoWay}"></Components:HlpUserControlBtnImage>
                                </WrapPanel>
                            </Expander>
                        </DockPanel>
                        <DockPanel LastChildFill="True">
                            <Expander Header="Administração" IsExpanded="True" Height="114.5" DockPanel.Dock="Top">
                                <WrapPanel Orientation="Vertical" Margin="0,10,0,0">
                                    <Components:HlpComboBox
								x:Name="cbxStPerfil"
								SelectedIndex="{Binding currentModel.stPerfil, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,0" FontFamily="Segoe UI" Caption="Perfil do Funcionário" Field="stPxerfil" Help="Informe o tipo de perfil do funcionário sendo:0-Centro de Trabalho, 1-Funcionário, 2-Prestador de Serviços, 3-Representante" Table="stPerfil" WidthLabel="128" HorizontalAlignment="Left">
                                        <Components:HlpComboBox.Items>
                                            <System:String>0-Centro de Trabalho</System:String>
                                            <System:String>1-Funcionário</System:String>
                                            <System:String>2-Prestador de Serviços</System:String>
                                            <System:String>3-Representante</System:String>
                                        </Components:HlpComboBox.Items>
                                    </Components:HlpComboBox>
                                    <Components:HlpPesquisa
								nameWindow="WinCalendario"
								Text="{Binding currentModel.idCalendario, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,0" Caption="Calendário" Field="idCalendário" Help="Informe um tipo de Calendário para o funcionário." Table="Calendario" WidthLabel="128" FieldPesquisa="ID" TableView="vwCalendario" HorizontalAlignment="Left" Width="433">
                                        <Components:HlpPesquisa.Items>
                                            <System:String>xNome</System:String>
                                            <System:String>xDescricao</System:String>
                                        </Components:HlpPesquisa.Items>
                                    </Components:HlpPesquisa>
                                </WrapPanel>
                            </Expander>
                            <Expander Header="Requisição de Compras" IsExpanded="True">
                                <WrapPanel Orientation="Vertical" Margin="0,10,0,0" >
                                    <Components:HlpPesquisa
								nameWindow="WinSite"
								Text="{Binding currentModel.idSite, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,20,10,-1" Caption="Site Padrão" Field="idSite" Help="Selecione um site. Quando um funcionário criar uma requisição de compra, o site será automaticamente transferido para o cabeçalho e para as linhas da requisição de compra." Table="Site" WidthLabel="178" FieldPesquisa="ID" TableView="vwSite" Width="465">
                                        <Components:HlpPesquisa.Items>
                                            <System:String>xSite</System:String>
                                            <System:String>xDescricao</System:String>
                                        </Components:HlpPesquisa.Items>
                                    </Components:HlpPesquisa>
                                    <Components:HlpPesquisa
								nameWindow="WinDeposito"
								Text="{Binding currentModel.idDeposito, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,-1" Caption="Depósito Padrão" Field="idDeposito" Help="Selecione um depósito. Quando um funcionário criar uma requisição de compra, o depósito será automaticamente transferido para o cabeçalho e para as linhas da requisição de compra" Table="Deposito" WidthLabel="178" FieldPesquisa="ID" TableView="vwDeposito" Width="465">
                                        <Components:HlpPesquisa.Items>
                                            <System:String>xDeposito</System:String>
                                            <System:String>xDescricao</System:String>
                                        </Components:HlpPesquisa.Items>
                                    </Components:HlpPesquisa>
                                    <Components:HlpTextBox
								 
								Text="{Binding currentModel.xInformacaoAtencao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,2" Caption="Informações de Atenção" Field="xInformacaoAtencao" Help="Insira informações sobre endereço de entrega adicional para um funcionário como, por exemplo, localização do escritório. As informações de atenção são automaticamente transferidas para o cabeçalho e para as linhas da requisição de compra" Table="Funcionario" WidthLabel="178"/>
                                </WrapPanel>
                            </Expander>
                        </DockPanel>
                    </DockPanel>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Endereços">
                <Grid>
                    <Components:HlpEndereco 
                        ItemsSource="{Binding currentModel.lFuncionario_Endereco}" 
                        IsReadOnly="{Binding bIsEnabled, Converter={StaticResource notConverter}}"
                        IsEnabled="{Binding bIsEnabled}"/>
                </Grid>
            </TabItem>
            <TabItem Header="Informações">
                <AdornerDecorator>
                    <DockPanel LastChildFill="True">
                        <DockPanel LastChildFill="True" DockPanel.Dock="left">
                            <Expander Header="Pessoais" IsExpanded="True" DockPanel.Dock="Top" Height="287">
                                <WrapPanel Orientation="Vertical" Margin="0,10,0,0">     
                                    <Components:HlpDateTimePicker   
                                        Text="{Binding currentModel.dAniversario, Mode=TwoWay,
                                        Converter={StaticResource maskConverter}, ConverterParameter=date,
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									SelectedDate="{Binding RelativeSource={RelativeSource Self},Path=Text}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="12,15,338,-1" Caption="Data de Aniversário" 
                                        Field="dAniversario" Help="Informe a data de aniversário do funcionário." Table="Funcionario" WidthLabel="154">
                                    </Components:HlpDateTimePicker>
                                    <Components:HlpComboBox x:Name="cbxSexo"
									
									SelectedIndex="{Binding currentModel.stSexo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,282,-1" Caption="Sexo" Field="stSexo" Help="Informe o sexo do funcionário" Table="Funcionario" WidthLabel="156">
                                        <Components:HlpComboBox.Items>
                                            <System:String>0-MASCULINO</System:String>
                                            <System:String>1-FEMININO</System:String>
                                        </Components:HlpComboBox.Items>
                                    </Components:HlpComboBox>
                                    <Components:HlpDateTimePicker
									 
									SelectedDate="{Binding currentModel.dFalecimento, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,338,-1" Caption="Data de Falecimento" Field="dFalecimento" Help="Informe a data de falecimento do funcionário." Table="Funcionario" WidthLabel="156"/>
                                    <Components:HlpTextBox
									
									Text="{Binding currentModel.xCpf, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=cpf,
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,320,-1" Caption="CPF" Field="xCpf" Help="Informar o Cadastro de Pessoa Física do funcionário" Table="Funcionario" WidthLabel="156"/>
                                    <Components:HlpTextBox
									
									Text="{Binding currentModel.xRg, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=rg,
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}" 
									Height="27" Margin="10,0,320,-1" Caption="RG" Field="xRg" Help="Informar o Registro Geral do funcionário" Table="Funcionario" WidthLabel="156"/>
                                    <Components:HlpTextBox	
									
									Text="{Binding currentModel.xConjugue, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}" 
									Height="27" Margin="10,0,202,-1" Caption="Conjugue" Field="xConjugue" Help="Informar o nome do Conjugue do funcionário, quando houver" Table="Funcionario" WidthLabel="156"/>
                                    <Components:HlpTextBox 
									
									Text="{Binding currentModel.xFilhos, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,202,-1" Caption="Filhos" Field="xFilhos" Help="Informar o nome dos filhos do funcionário, quando houver." Table="Funcionario" WidthLabel="156"/>
                                    <Components:HlpPesquisa 
									nameWindow="WinContaBancaria"
									Text="{Binding currentModel.idContaBancaria, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,30,-1" Caption="Conta Bancária" Field="idContaBancaria" Help="Informar a conta bancária do funcionário para eventual pagamento ou recebidos."
                                        Table="Funcionario" WidthLabel="156" FieldPesquisa="ID" TableView="vwContaBancaria">
                                        <Components:HlpPesquisa.Items>
                                            <System:String>xNumeroConta</System:String>
                                            <System:String>Agencia</System:String>
                                            <System:String>Banco</System:String>
                                            <System:String>stConta</System:String>
                                        </Components:HlpPesquisa.Items>
                                    </Components:HlpPesquisa>
                                    <Components:HlpComboBox
                                        Margin="10,0,0,0"
                                        Caption="Estado Civil"
                                        WidthLabel="156"
                                        IsEnabled="{Binding bIsEnabled}"
                                        SelectedIndex="{Binding currentModel.stEstadoCivil}"
                                        Help="Informar o Estado Civil para o Funcionário. 0 - Solteiro(a) - quem nunca se casou, ou que teve o casamento anulado 1 - Casado(a) - quem contraiu matrimônio, independente do regime de bens adotado 2 - Divorciado(a) - após a homologação do divórcio pela justiça ou por uma escritura pública. 3 - Viúvo(a) - pessoa cujo cônjuge faleceu."
                                        >                                        
                                        <Components:HlpComboBox.Items>
                                            <System:String>0 - Solteiro(a) - quem nunca se casou, ou que teve o casamento anulado</System:String>
                                            <System:String>1 - Casado(a) - quem contraiu matrimônio, independente do regime de bens adotado</System:String>
                                            <System:String>2 - Divorciado(a) - após a homologação do divórcio pela justiça ou por uma escritura pública.</System:String>
                                            <System:String>3 - Viúvo(a) - pessoa cujo cônjuge faleceu.</System:String>
                                        </Components:HlpComboBox.Items>
                                    </Components:HlpComboBox>
                                </WrapPanel>
                            </Expander>
                            <Expander Header="Visto" IsExpanded="True" >
                                <WrapPanel Orientation="Vertical" Margin="0,10,0,0">
                                    <Components:HlpTextBox									
									Text="{Binding currentModel.xVisto, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,10,2" Caption="Visto de Permanência" Field="xVisto" Help="Informar o Visto de permanência Brasileira do funcionário" Table="Funcionario" WidthLabel="133" HorizontalAlignment="Left" Width="238"/>
                                    <Components:HlpDateTimePicker 
									
									SelectedDate="{Binding currentModel.dFinalVisto, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,10,2" Caption="Data Final" Field="dFinalVisto" Help="Informar a data final do visto de permanência Brasileira do funcionário" Table="Funcionario" WidthLabel="133" HorizontalAlignment="Left"/>
                                    <Components:HlpTextBox	
									
									Text="{Binding currentModel.xVistoTrabalho, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,0,2" Caption="Visto de Trabalho" Field="xVistoTrabalho" Help="Informar a data final do visto de trabalho do funcionário" Table="Funcionario" WidthLabel="133" HorizontalAlignment="Left" Width="238"/>
                                    <Components:HlpDateTimePicker
									 
									SelectedDate="{Binding currentModel.dFinalVistoTrabalho, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,10,2" Caption="Data Final" Field="dFinalVistoTrabalho" Help="Informar a data final do visto de trabalho do funcionário" Table="Funcionario" WidthLabel="133" HorizontalAlignment="Left"/>
                                </WrapPanel>
                            </Expander>
                        </DockPanel>
                        <DockPanel LastChildFill="False">
                            <Expander Header="Departamento Pessoal" IsExpanded="True" DockPanel.Dock="Top">
                                <WrapPanel Orientation="Vertical">
                                    
                                    <Components:HlpDateTimePicker 
									 
									SelectedDate="{Binding currentModel.dAdmissao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,10,2" Caption="Admissão" Field="dAdmissao" Help="Informar a data de Admissão do funcionário" Table="Funcionario" WidthLabel="117" HorizontalAlignment="Left"/>
                                    <Components:HlpTextBox 									
									Text="{Binding currentModel.vDiaria, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource moedaConverter}}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,10,2" Caption="Diária" Field="vDiaria" Help="Informar o valor da diária do funcionário" Table="Funcionario" WidthLabel="117" HorizontalAlignment="Left" Width="267"/>                                    
                                    <Components:HlpComboBox x:Name="cbxSalario"
									SelectedIndex="{Binding currentModel.stSalario, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,10,2" Caption="Tipo de Salário" Field="stSalario" Help="Informar se a condição de salario do  funcionário é:" Table="Funcionario" WidthLabel="117" HorizontalAlignment="Left">
                                        <Components:HlpComboBox.Items>
                                            <System:String>0-Horista</System:String>
                                            <System:String>1-Mensalista</System:String>
                                        </Components:HlpComboBox.Items>
                                    </Components:HlpComboBox>
                                    <Components:HlpTextBox
									Text="{Binding currentModel.vSalario, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource moedaConverter}}"									
									Height="27" Margin="10,0,10,2" Caption="Salário" Field="vSalario" Help="Informar o valor mensal quando o campo Tipo de Salário tiver Mensalista ou valor hora quando o campo tipo de salário tiver horista." Table="Funcionario" WidthLabel="117" HorizontalAlignment="Left" Width="267">
                                        <Components:HlpTextBox.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=cbxSalario, Path=SelectedIndex}" Value="0">                                                        
                                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>                                                        
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding bIsEnabled}" Value="False">
                                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Components:HlpTextBox.Style>
                                    </Components:HlpTextBox>
                                    <Components:HlpTextBox
									Text="{Binding currentModel.vSalarioHora, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource moedaConverter}}"
									Height="27" Margin="10,0,10,2" Caption="Salário Hora" Field="vSalarioHora" Help="Informar o valor do salário hora do funcionário" Table="Funcionario" WidthLabel="117" HorizontalAlignment="Left" Width="267">
                                        <Components:HlpTextBox.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=cbxSalario, Path=SelectedIndex}" Value="1">
                                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding bIsEnabled}" Value="False">
                                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Components:HlpTextBox.Style>
                                    </Components:HlpTextBox>
                                    <Components:HlpPesquisa 
									nameWindow="WinFuncionario"
									Text="{Binding currentModel.idResponsavel, Mode=TwoWay, TargetNullValue={x:Null}, FallbackValue={x:Null},
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"	
									Height="27" Margin="10,0,10,2" Caption="Responsável" Field="idResponsavel" Help="Informar o responsável pelo funcionário na empresa" Table="Funcionario" WidthLabel="117" FieldPesquisa="ID" TableView="vwFuncionario" HorizontalAlignment="Left" Width="400">
                                        <Components:HlpPesquisa.Items>
                                            <System:String>xCodigoAlternativo</System:String>
                                            <System:String>xNome</System:String>
                                        </Components:HlpPesquisa.Items>
                                    </Components:HlpPesquisa>
                                </WrapPanel>
                            </Expander>
                            <Expander Header="Quantidade de Horas de Trabalho" IsExpanded="True" Height="200" DockPanel.Dock="Top">
                                <WrapPanel Orientation="Vertical" Margin="0,10,0,0">                                    
                                    <Components:HlpTextBox                                        
                                        Name="txtHorasSegunda"
                                        Text="{Binding currentModel.dQtdHorasSegunda, Mode=TwoWay, Converter={StaticResource timeSpanConverter},
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"                                        
									Height="27" Margin="10,0,10,2" Caption="Segunda-Feira" Field="nQtdHorasSegunda"
                                        Help="Informar a quantidade de horas trabalhada" Table="Funcionario" WidthLabel="113" HorizontalAlignment="Left" Width="200"/>
                                    <Components:HlpTextBox
                                        Name="txtHorasTerca"									
									Text="{Binding currentModel.dQtdHorasTerca, Mode=TwoWay, Converter={StaticResource timeSpanConverter},
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,10,2" Field="nQtdHorasTerca" Caption="Terça-Feira" Help="Informar a quantidade de horas trabalhada" Table="Funcionario" WidthLabel="113" HorizontalAlignment="Left" Width="200"/>
                                    <Components:HlpTextBox
                                        Name="txtHorasQuarta"
									
									Text="{Binding currentModel.dQtdHorasQuarta, Mode=TwoWay, Converter={StaticResource timeSpanConverter},
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,10,2" Field="nQtdHorasQuarta" Caption="Quarta-Feira" Help="Informar a quantidade de horas trabalhada" Table="Funcionario" WidthLabel="113" HorizontalAlignment="Left" Width="200"/>
                                    <Components:HlpTextBox
                                        Name="txtHorasQuinta"
									
									Text="{Binding currentModel.dQtdHorasQuinta, Mode=TwoWay, Converter={StaticResource timeSpanConverter},
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,10,2" Caption="Quinta-Feira" Field="nQtdHorasQuinta" Help="Informar a quantidade de horas trabalhada" Table="Funcionario" WidthLabel="113" HorizontalAlignment="Left" Width="200"/>
                                    <Components:HlpTextBox 
                                        Name="txtHorasSexta"
									
									Text="{Binding currentModel.dQtdHorasSexta, Mode=TwoWay, Converter={StaticResource timeSpanConverter},
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,10,2" Caption="Sexta-Feira" Field="nQtdHorasSexta" Help="Informar a quantidade de horas trabalhada" Table="Funcionario" WidthLabel="113" HorizontalAlignment="Left" Width="200"/>
                                    <Components:HlpTextBox 
                                        Name="txtHorasSabado"
									
									Text="{Binding currentModel.dQtdHorasSabado, Mode=TwoWay, Converter={StaticResource timeSpanConverter},
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
									Height="27" Margin="10,0,10,2" Caption="Sábado" Field="nQtdHorasSabado" Help="Informar a quantidade de horas trabalhada" Table="Funcionario" WidthLabel="200" HorizontalAlignment="Left" Width="300"/>
                                    <Components:HlpTextBox 
                                        Name="txtHorasDomingo"									
									Text="{Binding currentModel.dQtdHorasDomingo, Mode=TwoWay, Converter={StaticResource timeSpanConverter},
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									IsEnabled="{Binding bIsEnabled}"
                                        
									Height="27" Margin="10,0,10,2" Field="nQtdHorasDomingo" Caption="Domingo" Help="Informar a quantidade de horas trabalhada" Table="Funcionario" WidthLabel="200" HorizontalAlignment="Left" Width="300"/>
                                    <Components:HlpTextBox
                                        IsEnabled="False"
									Height="27" Margin="10,0" Caption="Total de Horas de Trabalho" 
                                        Help="O Sistema irá informar a quantidade de horas trabalhada na semana" Table="Funcionario" WidthLabel="200" HorizontalAlignment="Left" Width="300">
                                        <Components:HlpTextBox.Text>
                                            <MultiBinding Converter="{StaticResource operacoesAritmetConverter}" ConverterParameter="soma">
                                                <Binding ElementName="txtHorasSegunda" Path="Text"></Binding>
                                                <Binding ElementName="txtHorasTerca" Path="Text"></Binding>
                                                <Binding ElementName="txtHorasQuarta" Path="Text"></Binding>
                                                <Binding ElementName="txtHorasQuinta" Path="Text"></Binding>
                                                <Binding ElementName="txtHorasSexta" Path="Text"></Binding>
                                                <Binding ElementName="txtHorasSabado" Path="Text"></Binding>
                                                <Binding ElementName="txtHorasDomingo" Path="Text"></Binding>
                                            </MultiBinding>
                                        </Components:HlpTextBox.Text>
                                    </Components:HlpTextBox>
                                </WrapPanel>
                            </Expander>
                        </DockPanel>
                    </DockPanel>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Informação de Contato">
                <AdornerDecorator>
                    <DockPanel LastChildFill="True">
                        <Expander Header="Comercial" IsExpanded="True" DockPanel.Dock="Left" Width="468">
                            <WrapPanel Orientation="Vertical" Margin="0,10,0,0">
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xTelefoneComercial, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=tel,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,2" Caption="Telefone Comercial" Field="xTelefoneComercial" Help="Insira o número do telefone comercial do funcionário." Table="Funcionario" WidthLabel="160" HorizontalAlignment="Left" Width="278"/>
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xRamalComercial, Mode=TwoWay,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,0,2" Caption="Ramal" Field="xRamalComercial" Help="Insira o número do Ramal do funcionário" Table="Funcionario" WidthLabel="160" HorizontalAlignment="Left" Width="278"/>
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xCelularComercial, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=cel,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,0,2" Caption="Celular" Field="xCelularComercial" Help="Insira o número do Celular do funcionário." Table="Funcionario" WidthLabel="160" HorizontalAlignment="Left" Width="278"/>
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xRadioFoneComercial, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=tel,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,0,2" Caption="Radio" Field="xRadioFoneComercial" Help="Insira o número do Radio do funcionário." Table="Funcionario" WidthLabel="160" HorizontalAlignment="Left" Width="278"/>
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xPagerComercial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,0,2" Caption="Pager" Field="xPagerComercial" Help="Insira o número do Pager do funcionário." Table="Funcionario" WidthLabel="160" HorizontalAlignment="Left" Width="278"/>
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xFaxComercial, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=tel,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,0,2" Caption="Fax" Field="xFaxComercial" Help="Insira o número do Fax do funcionário." Table="Funcionario" WidthLabel="160" HorizontalAlignment="Left" Width="278"/>
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xEmailComercial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,0,2" Caption="E-mail" Field="xEmailComercial" Help="Insira o e-mail do funcionário." Table="Funcionario" WidthLabel="159" HorizontalAlignment="Left" Width="382"/>
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xSkypeComercial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,0,2" Caption="Skype" Field="xSkypeComercial" Help="Insira o Skype do funcionário." Table="Funcionario" WidthLabel="159" HorizontalAlignment="Left" Width="382"/>
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xMsnComercial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,0,2" Caption="MSN" Field="xMSNComercial" Table="Funcionario" Help="Insira o MSN do funcionário." WidthLabel="159" HorizontalAlignment="Left" Width="382"/>
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xHttpComercial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,0,2" Caption="Endereço na Internet" Field="xhttpComercial" Help="Insira o endereço do Site da empresa do funcionário." Table="Funcionario" WidthLabel="159" HorizontalAlignment="Left" Width="382"/>
                            </WrapPanel>
                        </Expander>
                        <Expander Header="Residencial" IsExpanded="True">
                            <WrapPanel Orientation="Vertical" Margin="0,10,0,0">
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xTelefoneResidencial, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=tel,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,2" Caption="Telefone" Field="xTelefoneResidencial" Help="Insira o número do telefone particular do funcionário, caso possua." Table="Funcionario" WidthLabel="139" HorizontalAlignment="Left" Width="250"/>
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xCelularResidencial, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=cel,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,2" Caption="Celular " Field="xCelularResidencial" Help="Insira o número do Celular Particular do funcionário, caso possua." Table="Funcionario" WidthLabel="139" HorizontalAlignment="Left" Width="250"/>
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xRadioFoneResidencial, Mode=TwoWay, Converter={StaticResource maskConverter}, ConverterParameter=tel,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,2" Field="xRadioFoneResidencial" Caption="Radio" Help="Insira o endereço do Radio  pessoal do funcionário, caso possua." Table="Funcionario" WidthLabel="139" HorizontalAlignment="Left" Width="250"/>
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xEmailResidencial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,2" Caption="E-mail " Field="xEmailResidencial" Help="Insira o e-mail particular do funcionário, caso possua." Table="Funcionario" WidthLabel="139" HorizontalAlignment="Left" Width="374"/>
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xSkypeResidencial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,2" Caption="Skype" Field="xSkypeResidencial" Help="Insira o Skype particular do funcionário, caso possua." Table="Funcionario" WidthLabel="139" HorizontalAlignment="Left" Width="374"/>
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.xMsnResidencial, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,0,10,2" Caption="MSN" Field="xMsnResidencial" Help="Insira o MSN particular do funcionário, caso possua." Table="Funcionario" WidthLabel="139" HorizontalAlignment="Left" Width="374"/>
                                <Components:HlpTextBox Height="27" Margin="10,0,10,2" Caption="Home page pessoal" Field="XhttpPessoal" 
                                                       Help="Insira o endereço de internet  pessoal do funcionário, caso possua." Table="Funcionario"
                                                       IsEnabled="{Binding bIsEnabled}" WidthLabel="139" HorizontalAlignment="Left" Width="374"/>
                            </WrapPanel>
                        </Expander>
                    </DockPanel>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Certificações">
                <AdornerDecorator>
                    <DataGrid
                          Name="gridCertificacoes"
						  ItemsSource="{Binding currentModel.lFuncionario_Certificacao}"                          
                          IsEnabled="{Binding bIsEnabled}"
                          AutoGenerateColumns="False" 
                          SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
                          CanUserDeleteRows="True"
                          CanUserAddRows="True"
                            >
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="clStCertificacao" Header="Tipo de Certificação" Width="120" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=enumTipoCertificacao}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>

                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <Grid FocusManager.FocusedElement="{Binding ElementName= cbxEdit}" >
                                            <ComboBox x:Name="cbxEdit"
                ItemsSource="{Binding Source={StaticResource EnumDescriptionDictCertif}}" 
                                                      DisplayMemberPath="Key"
                                SelectedValuePath="Value"
            SelectedValue="{Binding enumTipoCertificacao,
                                UpdateSourceTrigger=LostFocus}"
                                                      IsSynchronizedWithCurrentItem="False"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn                                
                                Header="Certificação" Width="200"
                                ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xCertificacao, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                            <DataGridTemplateColumn x:Name="dtConclusao" Header="Conclusão" Width="200">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=dConclusao, StringFormat=\{0:d\}}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <Grid FocusManager.FocusedElement="{Binding ElementName= dateScheduledPicker}" >
                                            <DatePicker x:Name="dateScheduledPicker" SelectedDate="{Binding Path=dConclusao, 
                                                Mode=TwoWay, ValidatesOnExceptions=true, NotifyOnValidationError=true}" />
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="dtValidade" Header="Validade" Width="200">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=dValidade, StringFormat=\{0:d\}}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <Grid FocusManager.FocusedElement="{Binding ElementName= dateScheduledPicker}" >
                                            <DatePicker x:Name="dateScheduledPicker" SelectedDate="{Binding Path=dValidade, 
                                                Mode=TwoWay, ValidatesOnExceptions=true, NotifyOnValidationError=true}" />
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn                                
                                Header="Memorando" Width="200"
                                    ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xMemorando, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Regras de Comissões" 
                     Visibility="{Binding ElementName=cbxStPerfil, Path=SelectedIndex, Converter={StaticResource tabItemRepresentanteVisibilityConv}}">
                <AdornerDecorator>
                    <DockPanel LastChildFill="False">
                        <Expander Header="Geral" IsExpanded="True" DockPanel.Dock="Top" Height="134">
                            <WrapPanel Orientation="Vertical" Margin="0,10,0,0">
                                <Components:HlpComboBox 								
								x:Name="cbxStComissao"
								SelectedIndex="{Binding currentModel.stComissao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
								IsEnabled="{Binding bIsEnabled}"
								Height="27" Margin="10,10,10,2" Caption="Tipo de Comissão" Field="stComissao" Help="Informar o tipo de comissão a ser calculada para o Representante, são elas: 0-Por Representante (Default) (Os valores de comissão Avista e Aprazo virão do cadastro de Funcionário da guia Representantes) 1-Por Lista de Preço (Quando por lista de preço o sistema buscará a comissão quando Avista e Aprazo das Listas de preços e depois o que define é os produtos da lista, caso tenha os campos de comissão preenchido) 2-Por Família de Produto (O sistema pegará as comissões do cadastro de Familia de Produto e todas as outras comissões serão descartadas pelo sistema) 3-Por Produto (Caso seja por produto definir no próprio formulário de funcionários os produtos relacionado a esse representantes e suas respectivas comissões, o sistema somente liberará a visualização dos produtos que estiverem cadastrado nessa tabela para o representante, outros produtos não cadastrado não poderão ser vendidos) 4-Por Faixa Margem de Venda Quando por faixa o sistema pegará o valor vendido pelo representante calculara a faixa de margem da venda e colocará na faixa que representa essa margem e chegará na comissão a vista ou a prazo." Table="Funcionario" WidthLabel="213" HorizontalAlignment="Left">
                                    <Components:HlpComboBox.Items>
                                        <System:String>0-Por Representante</System:String>
                                        <System:String>1-Por Lista de Preço</System:String>
                                        <System:String>2-Por Família de Produto</System:String>
                                        <System:String>3-Por Produto</System:String>
                                        <System:String>4-Por Faixa de Lucro</System:String>
                                        <System:String>5-Por Faixa Margem de Venda</System:String>
                                    </Components:HlpComboBox.Items>
                                </Components:HlpComboBox>
                                <Components:HlpTextBox
								Text="{Binding currentModel.pComissaoAvista, Mode=TwoWay, Converter={StaticResource porcentagemConverter},
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"								
								Height="27" Margin="10,0,10,2" Caption="Percentual Comissão a Vista" Field="pComissaoAvista" Help="Informar a alíquota em percentual da comissão somente para valores a Vista, quando a condição de vendas for igual Avista Quando o Campo Condicao_Pagamento.stCondicao for igual Avista" Table="Funcionario" WidthLabel="213" HorizontalAlignment="Left" Width="364">
                                    <Components:HlpTextBox.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="0">
                                                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="1">
                                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="2">
                                                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="3">
                                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="4">
                                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding bIsEnabled}" Value="False">
                                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Components:HlpTextBox.Style>
                                </Components:HlpTextBox>
                                <Components:HlpTextBox 
								
								Text="{Binding currentModel.pComissaoAprazo, Mode=TwoWay, Converter={StaticResource porcentagemConverter},
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"								
								Height="27" Margin="10,0,10,2" Caption="Percentual Comissão a Prazo" Field="pComissaoAprazo" Help="Informar a alíquota em percentual da comissão somente para valores a Prazo, quando a Condicao_Pagamento.stCondicao for Aprazo. " Table="Funcionario" WidthLabel="213" HorizontalAlignment="Left" Width="364">
                                    <Components:HlpTextBox.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="0">
                                                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="1">
                                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="2">
                                                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="3">
                                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="4">
                                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding bIsEnabled}" Value="False">
                                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Components:HlpTextBox.Style>
                                </Components:HlpTextBox>
                            </WrapPanel>
                        </Expander>
                        <Expander Header="Produtos Representante" IsExpanded="True">
                            <DataGrid
                                    Name="gridRepresentantes"
                                    ItemsSource="{Binding currentModel.lFuncionario_Comissao_Produto}"                          
                                    IsEnabled="{Binding bIsEnabled}"
                                    AutoGenerateColumns="False" 
                                    SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
                                    CanUserDeleteRows="True"
                                    CanUserAddRows="True"
                                    >
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn x:Name="clProdutos" Header="Produtos" Width="150" >
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=idProduto, Converter={StaticResource cbxDisplayConv}, 
                                                    ConverterParameter={StaticResource lresultProdutos}}"
                                                   />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                        <DataGridTemplateColumn.CellEditingTemplate>
                                            <DataTemplate>
                                                <Grid FocusManager.FocusedElement="{Binding ElementName= cbxEdit}" >
                                                    <ComboBox x:Name="cbxEdit"
                ItemsSource="{Binding Source={StaticResource lresultProdutos}}"
                                            SelectedValuePath="id"
                                            DisplayMemberPath="display"                      
            SelectedValue="{Binding idProduto,
                                UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
                                                      IsSynchronizedWithCurrentItem="False"/>
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellEditingTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn                                
                                        Header="% Comissão a Vista" Width="200"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissaoAvista, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource porcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                    <DataGridTextColumn                                
                                        Header="% Comissão a Prazo" Width="200"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissaoAprazo, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource porcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Expander.Style>
                                <Style>
                                    <Style.Triggers>   
                                        <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="0">
                                            <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="1">
                                            <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="2">
                                            <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="4">
                                            <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Expander.Style>
                        </Expander>
                        <Expander Header="Família de Produto" IsExpanded="True">
                            <DataGrid
                                ItemsSource="{Binding currentModel.lFamiliaProduto}"
                                IsEnabled="{Binding bIsEnabled}"
                                    AutoGenerateColumns="False" 
                                    SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"                                
                                >
                                <DataGrid.Columns>
                                    <DataGridTextColumn 
                                        Header="Id Fam. Produto" Width="80"
                                        IsReadOnly="True"
                                        Binding="{Binding idFamiliaProduto}"></DataGridTextColumn>
                                    <DataGridTextColumn 
                                        Header="Descrição Fam. Produto" Width="150" 
                                        IsReadOnly="True"
                                        Binding="{Binding xDescricao}"></DataGridTextColumn>
                                    <DataGridTextColumn 
                                        Header="Sigla Fam. Produto" Width="100"  
                                        IsReadOnly="True"
                                        Binding="{Binding xSigla}"></DataGridTextColumn>
                                    <DataGridTextColumn 
                                        Header="% Comis. à Vista" Width="100"                                        
                                        Binding="{Binding pComissaoAvista, Converter={StaticResource porcentagemConverter}}"></DataGridTextColumn>
                                    <DataGridTextColumn 
                                        Header="% Comis. à Prazo" Width="100"                                        
                                        Binding="{Binding pComissaoAprazo, Converter={StaticResource porcentagemConverter}}"></DataGridTextColumn>
                                    <DataGridTextColumn 
                                        Header="% Desc. Máx" Width="100"                                        
                                        Binding="{Binding pDescontoMaximo, Converter={StaticResource porcentagemConverter}}"></DataGridTextColumn>
                                    <DataGridTextColumn 
                                        Header="% Acrésc. Máx" Width="100"                                        
                                        Binding="{Binding pAcressimoMaximo, Converter={StaticResource porcentagemConverter}}"></DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Expander.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="0">
                                            <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="1">
                                            <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="3">
                                            <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="4">
                                            <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="5">
                                            <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Expander.Style>
                        </Expander>
                        <Expander Header="Faixa de Lucro" IsExpanded="True">
                            <DataGrid
                            Name="gridComissoes"
                                    ItemsSource="{Binding currentModel.lFuncionario_Margem_Lucro_Comissao}"                          
                                    IsEnabled="{Binding bIsEnabled}"
                                    AutoGenerateColumns="False" 
                                    SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
                                    CanUserDeleteRows="True"
                                    CanUserAddRows="True"
                            >
                                <DataGrid.Columns>
                                    <DataGridTextColumn                                
                                        Header="% Margem Venda 'De'" Width="200"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pDeMargemVenda, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource porcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                    <DataGridTextColumn                                
                                        Header="% Margem Venda 'Até'" Width="200"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pAteMargemVenda, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource porcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                    <DataGridTextColumn                                
                                        Header="% Comissão à Vista" Width="200"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissaoAvista, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource porcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                    <DataGridTextColumn                                
                                        Header="% Comissão a Prazo" Width="200"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissaoAprazo, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource porcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Expander.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="0">
                                            <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="1">
                                            <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="2">
                                            <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="3">
                                            <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=cbxStComissao, Path=SelectedIndex}" Value="5">
                                            <Setter Property="FrameworkElement.Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Expander.Style>
                        </Expander>
                    </DockPanel>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Arquivos">
                <AdornerDecorator>
                    <DataGrid
                            Name="gridArquivos"
                        ItemsSource="{Binding currentModel.lFuncionario_Arquivo}"                          
                          IsEnabled="{Binding bIsEnabled}"
                          AutoGenerateColumns="False" 
                          SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
                          CanUserDeleteRows="True"
                          CanUserAddRows="True"
                            >
                        <DataGrid.Columns>
                            <DataGridTextColumn                                
                                Header="Arquivo" Width="300"
                                    ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xArquivo, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                            <DataGridTemplateColumn Header="Caminho" Width="400">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Components:HlpTextBox                                            
                                            isFindFiles="True"
                                            Caption="" WidthLabel="0"
                                            UcMouseDoubleClick="HlpTextBox_UcMouseDoubleClick"
                                            Text="{Binding Path=xLink, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"></Components:HlpTextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <Components:HlpTextBox
                                            Caption="" WidthLabel="0"
                                            Text="{Binding Path=xLink, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"></Components:HlpTextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Hierarquia" GotFocus="TabItem_GotFocus">
                <AdornerDecorator>
                    <ContentControl Content="{ Binding Path=hierarquiaFunc, Mode=OneWay}"></ContentControl>
                </AdornerDecorator>
            </TabItem>
            <Components:HlpEndereco/>
        </TabControl>
    </Grid>
</runtime:WindowsBase>

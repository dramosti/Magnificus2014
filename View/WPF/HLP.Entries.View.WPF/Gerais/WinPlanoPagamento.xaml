<runtime:WindowsBase
        xmlns:runtime="clr-namespace:HLP.Comum.View.Formularios;assembly=HLP.Comum.View"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Components="clr-namespace:HLP.Comum.View.Components;assembly=HLP.Comum.View" 
        xmlns:convert="clr-namespace:HLP.Comum.View.Converters;assembly=HLP.Comum.View"
        xmlns:enums="clr-namespace:HLP.Comum.Resources.RecursosBases;assembly=HLP.Comum.Resources"
		xmlns:System="clr-namespace:System;assembly=mscorlib" 
        x:Class="HLP.Entries.View.WPF.Gerais.WinPlanoPagamento"
        Title="Plano de Pagamento" Height="660" Width="1024" NameView="vwPlanoPagamento">
    <Window.Resources>
        <ObjectDataProvider 
            MethodName="GetDict"
            ObjectType="{x:Type convert:EnumDescriptionConverter}"
            x:Key="EnumValorOuPorcentagem">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:ValorOuPorcentagem"></x:Type>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Expander Header="Identificação" IsExpanded="True" Style="{StaticResource ExpanderPadrao}" Focusable="False">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="10"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                </Grid.RowDefinitions>
                <!--Label-->

                <Components:CustomTextBlock Text="Código" Grid.Column="1" Grid.Row="1"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Plano Pagamento" Grid.Column="1" Grid.Row="2"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Descrição " Grid.Column="1" Grid.Row="3"></Components:CustomTextBlock>
                
                <!--Components-->
                
                <Components:CustomTextBox
                    Grid.Column="2" Grid.Row="1"
                    IsReadOnly="True"
					Text="{Binding currentModel.idPlanoPagamento, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
				    ToolTip="Chave principal do registro do Plano de Pagamento">
                </Components:CustomTextBox>
                <Components:CustomTextBox
                    Grid.Column="2" Grid.Row="2"
                    Text="{Binding currentModel.xPlanoPagamento, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
				    IsEnabled="{Binding bIsEnabled}"
					ToolTip="Insira um código ou uma breve descrição para identificar o plano de pagamento.">
                </Components:CustomTextBox>
                <Components:CustomTextBox
                    Grid.Column="2" Grid.Row="3"
                    Text="{Binding currentModel.xDescricao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
				    IsEnabled="{Binding bIsEnabled}"
					ToolTip="Insira a descrição do plano de pagamento">
                </Components:CustomTextBox>
                
            </Grid>
        </Expander>
        <Expander Header="Plano Pagamento" IsExpanded="True" Grid.Row="1" Style="{StaticResource ExpanderPadrao}" Focusable="False">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="10"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                </Grid.RowDefinitions>
                
                <!--Label-->

                <Components:CustomTextBlock Text="Alocação" Grid.Column="1" Grid.Row="1"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Forma de Pagamento" Grid.Column="1" Grid.Row="2"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Alterar" Grid.Column="1" Grid.Row="3"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Numero de Pagamentos" Grid.Column="1" Grid.Row="4"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Valor Fixo para cada pagamento." Grid.Column="1" Grid.Row="5"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Valor Mínimo" Grid.Column="1" Grid.Row="6"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Alocação de imposto sobre vendas" Grid.Column="1" Grid.Row="7"></Components:CustomTextBlock>
                
                <!--Components-->
                
                <Components:CustomComboBox
                    Grid.Column="2" Grid.Row="1"
                    x:Name="cbxAlocacao"						
					SelectedIndex="{Binding currentModel.stAlocacao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="0-Especificado – um valor específico é devido em cada uma das datas de pagamento especificadas. Defina as linhas e os valores do plano de pagamento na guia Linhas de pagamento.Quando utilizar o status Especificado:os campos . Alterar, Numero de Pagamentos, Valor Moeda, Valor Minimo são desativados.1-Quantidade fixa (VALOR DEFAULT) – pagamento do valor total é dividido em uma quantidade fixa de prestações. Quando utilizar o status Quantidade Fixa: o campo Valor Moeda e a Guia das linhas é  desativado.2-Total – valor total pendente quando a Nota fiscal está vencida. Quando utilizar o status Total:os campos Numero de Pagamentos e Alocação de Impostos são desativados.3-Valor fixo – um valor específico e fixo é devido por cada prestação nas datas de pagamento calculadas. Quando utilizar o status Valor Fixo: os campos Forma de Pagamento, Alterar, Numero de Pagamentos,">
                    <Components:CustomComboBox.Items>
                        <System:String>0-Especificado</System:String>
                        <System:String>1-Quantidade fixa</System:String>
                        <System:String>2-Total</System:String>
                        <System:String>3-Valor fixo</System:String>
                    </Components:CustomComboBox.Items>
                </Components:CustomComboBox>
                <Components:CustomComboBox
                    Grid.Column="2" Grid.Row="2"
                    SelectedIndex="{Binding currentModel.stFormaPagamento, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="Selecione o intervalo de datas em dias, meses ou anos a ser usado no cálculo da data de vencimento de cada prestação.">
                    <Components:CustomComboBox.Items>
                        <System:String>0-Anos</System:String>
                        <System:String>1-Dias</System:String>
                        <System:String>2-Meses</System:String>
                    </Components:CustomComboBox.Items>
                </Components:CustomComboBox>
                <Components:CustomTextBox
                    Grid.Column="2" Grid.Row="3"
                    Text="{Binding currentModel.nAlterar, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"												
                        ToolTip="Insira o número de unidades entre as datas de vencimento de cada prestação no campo Forma de Pagamento. ">
                    <Components:CustomTextBox.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=bIsEnabled}" Value="False">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=cbxAlocacao, Path=SelectedIndex}" Value="0">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=cbxAlocacao, Path=SelectedIndex}" Value="2">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Components:CustomTextBox.Style>
                </Components:CustomTextBox>

            </Grid>
        </Expander>
    </Grid>
</runtime:WindowsBase>

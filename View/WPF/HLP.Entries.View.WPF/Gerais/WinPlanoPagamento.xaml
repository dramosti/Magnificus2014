<runtime:WindowsBase
        xmlns:runtime="clr-namespace:HLP.Components.View.WPF;assembly=HLP.Components.View.WPF"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Components="clr-namespace:HLP.Components.View.WPF;assembly=HLP.Components.View.WPF" 
        xmlns:convert="clr-namespace:HLP.Components.View.WPF.Converter;assembly=HLP.Components.View.WPF"
        xmlns:convertLocal="clr-namespace:HLP.Entries.View.WPF.Gerais.Converters"
		xmlns:System="clr-namespace:System;assembly=mscorlib" 
        xmlns:util="clr-namespace:HLP.Base.ClassesBases;assembly=HLP.Base"
        x:Class="HLP.Entries.View.WPF.GestãoAdministrativa.Financeiro.WinPlanoPagamento"
        Title="Plano de Pagamento" Height="660" Width="1024" NameView="vwPlanoPagamento">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/HLP.Resources.View.WPF;component/Styles/Components/UserControlStyles.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <convert:NotConverter x:Key="notConverter"/>
            <convert:SelectedItemToTextConverter x:Key="selectedItemToTextConverter"/>
            <convertLocal:EnabledValorPorcentagemMultiConverter x:Key="enabledClValorPorcMultiConverter"/>
            <util:BindingProxy x:Key="proxy" Data="{Binding}" />
            <CompositeCollection x:Key="collectionTipo">
                <System:String>0 - PORCENTAGEM (VALOR DEFAULT)</System:String>
                <System:String>1 - VALOR ESPECÍFICO</System:String>
            </CompositeCollection>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Expander Header="Identificação" IsExpanded="True" Style="{StaticResource ExpanderPadrao}" Focusable="False">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition MaxWidth="120" MinWidth="120"></ColumnDefinition>
                    <ColumnDefinition MaxWidth="90" MinWidth="90"></ColumnDefinition>
                    <ColumnDefinition MaxWidth="50" MinWidth="50"></ColumnDefinition>
                    <ColumnDefinition MaxWidth="120" MinWidth="120"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="10"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                </Grid.RowDefinitions>
                <!--Label-->

                <Components:CustomTextBlock Text="Código" Grid.Column="1" Grid.Row="1"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Plano Pagamento" Grid.Column="1" Grid.Row="2"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Descrição " Grid.Column="1" Grid.Row="3"></Components:CustomTextBlock>

                <!--Components-->

                <Components:CustomTextBox stCompPosicao="fieldId"
                    Grid.Column="2" Grid.Row="1"
                    IsReadOnly="True"
					Text="{Binding currentModel.idPlanoPagamento, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
				    ToolTip="Chave principal do registro do Plano de Pagamento">
                </Components:CustomTextBox>
                <Components:CustomTextBox stCompPosicao="first"
                    Grid.Column="2" Grid.Row="2" Grid.ColumnSpan="2"
                    Text="{Binding currentModel.xPlanoPagamento, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
				    IsEnabled="{Binding bIsEnabled}"
					ToolTip="Insira um código ou uma breve descrição para identificar o plano de pagamento.">
                </Components:CustomTextBox>
                <Components:CustomTextBox
                    Grid.Column="2" Grid.Row="3" Grid.ColumnSpan="3"
                    Text="{Binding currentModel.xDescricao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
				    IsEnabled="{Binding bIsEnabled}"
					ToolTip="Insira a descrição do plano de pagamento">
                </Components:CustomTextBox>

            </Grid>
        </Expander>
        <Expander Header="Plano Pagamento" IsExpanded="True" Grid.Row="1" Style="{StaticResource ExpanderPadrao}" Focusable="False">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition MaxWidth="220" MinWidth="220"></ColumnDefinition>
                    <ColumnDefinition MaxWidth="90" MinWidth="90"></ColumnDefinition>
                    <ColumnDefinition MaxWidth="35" MinWidth="35"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="10"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                </Grid.RowDefinitions>

                <!--Label-->

                <Components:CustomTextBlock Text="Alocação" Grid.Column="1" Grid.Row="1"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Forma de Pagamento" Grid.Column="1" Grid.Row="2"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Alterar" Grid.Column="1" Grid.Row="3"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Numero de Pagamentos" Grid.Column="1" Grid.Row="4"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Valor Fixo para cada pagamento." Grid.Column="1" Grid.Row="5"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Valor Mínimo" Grid.Column="1" Grid.Row="6"></Components:CustomTextBlock>
                <Components:CustomTextBlock Text="Alocação de imposto sobre vendas" Grid.Column="1" Grid.Row="7"></Components:CustomTextBlock>

                <!--Components-->

                <Components:CustomComboBox
                    Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2" 
                    x:Name="cbxAlocacao"						
					SelectedIndex="{Binding currentModel.stAlocacaoImpostos, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="0-Especificado – um valor específico é devido em cada uma das datas de pagamento especificadas. Defina as linhas e os valores do plano de pagamento na guia Linhas de pagamento.Quando utilizar o status Especificado:os campos . Alterar, Numero de Pagamentos, Valor Moeda, Valor Minimo são desativados.1-Quantidade fixa (VALOR DEFAULT) – pagamento do valor total é dividido em uma quantidade fixa de prestações. Quando utilizar o status Quantidade Fixa: o campo Valor Moeda e a Guia das linhas é  desativado.2-Total – valor total pendente quando a Nota fiscal está vencida. Quando utilizar o status Total:os campos Numero de Pagamentos e Alocação de Impostos são desativados.3-Valor fixo – um valor específico e fixo é devido por cada prestação nas datas de pagamento calculadas. Quando utilizar o status Valor Fixo: os campos Forma de Pagamento, Alterar, Numero de Pagamentos,">
                    <Components:CustomComboBox.Items>
                        <System:String>0-Especificado</System:String>
                        <System:String>1-Quantidade fixa</System:String>
                        <System:String>2-Total</System:String>
                        <System:String>3-Valor fixo</System:String>
                    </Components:CustomComboBox.Items>
                </Components:CustomComboBox>
                <Components:CustomComboBox
                    Grid.Column="2" Grid.Row="2" Grid.ColumnSpan="2"
                    SelectedIndex="{Binding currentModel.stFormaPagamento, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="Selecione o intervalo de datas em dias, meses ou anos a ser usado no cálculo da data de vencimento de cada prestação.">
                    <Components:CustomComboBox.Style>
                        <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="ComboBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=bIsEnabled}" Value="False">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=cbxAlocacao, Path=SelectedIndex}" Value="3">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Components:CustomComboBox.Style>
                    <Components:CustomComboBox.Items>
                        <System:String>0-Anos</System:String>
                        <System:String>1-Dias</System:String>
                        <System:String>2-Meses</System:String>
                    </Components:CustomComboBox.Items>
                </Components:CustomComboBox>
                <Components:CustomTextBox
                    Grid.Column="2" Grid.Row="3" Height="20" Margin="5,0,31,3"
                    Text="{Binding currentModel.nAlterarFormaPagamento, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"												
                    ToolTip="Insira o número de unidades entre as datas de vencimento de cada prestação no campo Forma de Pagamento. " Grid.ColumnSpan="2">
                    <Components:CustomTextBox.Style>
                        <Style BasedOn="{StaticResource TextBoxComponentStyle}" TargetType="TextBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=bIsEnabled}" Value="False">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=cbxAlocacao, Path=SelectedIndex}" Value="0">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=cbxAlocacao, Path=SelectedIndex}" Value="2">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=cbxAlocacao, Path=SelectedIndex}" Value="3">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Components:CustomTextBox.Style>
                </Components:CustomTextBox>
                <Components:CustomTextBox
                    Grid.Column="2" Grid.Row="4"
                    Text="{Binding currentModel.nNumerosPagamentos, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="Se você selecionou a opção Quantidade fixa no campo Alocação, especifique o número de prestações para o plano de pagamento.">
                    <Components:CustomTextBox.Style>
                        <Style BasedOn="{StaticResource TextBoxComponentStyle}" TargetType="TextBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=bIsEnabled}" Value="False">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=cbxAlocacao, Path=SelectedIndex}" Value="0">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=cbxAlocacao, Path=SelectedIndex}" Value="2">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=cbxAlocacao, Path=SelectedIndex}" Value="3">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Components:CustomTextBox.Style>
                </Components:CustomTextBox>
                <Components:CustomTextBox
                    Grid.Column="2" Grid.Row="5"
                    Text="{Binding currentModel.vFixoPagamento, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:C}}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="Se você selecionou a opção Valor fixo no campo Alocação , especifique o valor da moeda de cada prestação.">
                </Components:CustomTextBox>
                <Components:CustomTextBox
                    Grid.Column="2" Grid.Row="6"
                    Text="{Binding currentModel.vPagamentoMinimo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:C}}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="Especifique o menor valor da prestação. Valores mínimos substituem valores de pagamento calculados.">
                    <Components:CustomTextBox.Style>
                        <Style BasedOn="{StaticResource TextBoxComponentStyle}" TargetType="TextBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=bIsEnabled}" Value="False">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=cbxAlocacao, Path=SelectedIndex}" Value="0">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=cbxAlocacao, Path=SelectedIndex}" Value="3">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Components:CustomTextBox.Style>
                </Components:CustomTextBox>
                <Components:CustomComboBox
                    Grid.Column="2" Grid.Row="7" Grid.ColumnSpan="2"
                    SelectedIndex="{Binding currentModel.stAlocacaoImpostos, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="Selecione um método de distribuição do valor do imposto sobre vendas para prestações do plano de pagamento. 0-Primeira prestação - o valor total do imposto sobre vendas está incluído na primeira prestação. 1-Proporcionalmente - o valor do imposto sobre vendas é distribuído por igual, com o mesmo valor de imposto em cada prestação. 2-Última prestação - o valor total do imposto sobre vendas está incluído na última prestação. ">
                    <Components:CustomComboBox.Items>
                        <System:String>0-Primeira prestação</System:String>
                        <System:String>1-Proporcionalmente</System:String>
                        <System:String>2-Última prestação</System:String>
                    </Components:CustomComboBox.Items>
                    <Components:CustomComboBox.Style>
                        <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="ComboBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=bIsEnabled}" Value="False">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=cbxAlocacao, Path=SelectedIndex}" Value="2">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=cbxAlocacao, Path=SelectedIndex}" Value="3">
                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Components:CustomComboBox.Style>
                </Components:CustomComboBox>
            </Grid>
        </Expander>
        <Expander Header="Nota" IsExpanded="True" Grid.Row="2" Style="{StaticResource ExpanderPadrao}" Focusable="False">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition MaxWidth="75" MinWidth="75"></ColumnDefinition>
                    <ColumnDefinition MaxWidth="700" MinWidth="700"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="10"></RowDefinition>
                    <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                </Grid.RowDefinitions>
                <!--Label-->

                <Components:CustomTextBlock Text="Nota" Grid.Column="1" Grid.Row="1"/>

                <!--Components-->

                <Components:CustomTextBox
                    Grid.Column="2" Grid.Row="1"
                    Text="{Binding currentModel.xNota, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="Insira uma nota que explica como e quando usar o plano de pagamento. A nota é opcional e somente para uso interno.">
                </Components:CustomTextBox>

            </Grid>
        </Expander>
        <Expander Header="Plano de Pagamento" Grid.Row="3" IsExpanded="True" Style="{StaticResource ExpanderPadrao}" Focusable="False">
            <DataGrid 
                        ItemsSource="{Binding currentModel.lPlano_pagamento_linhasModel}"
                        AutoGenerateColumns="False" 
						SelectionUnit="CellOrRowHeader"
                        CanUserAddRows="True"
						CanUserReorderColumns="False"
						CanUserDeleteRows="True"
						HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch"  BorderBrush="Black">
                <DataGrid.Style>
                    <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
                        <Setter Property="IsReadOnly" Value="True"/>
                        <Style.Triggers>                            
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=bIsEnabled}" Value="True"/>
                                    <Condition Binding="{Binding Path=currentModel.stAlocacaoImpostos}" Value="0"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsReadOnly" Value="False"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Style>
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Path=nQuantidade, UpdateSourceTrigger=PropertyChanged}" ClipboardContentBinding="{x:Null}" Header="Parcelas" Width="150"/>
                    <DataGridComboBoxColumn                         
                        Width="120" Header="Tipo" ItemsSource="{StaticResource collectionTipo}"
                                        SelectedItemBinding="{Binding stValorouPorcentagem, Converter={StaticResource selectedItemToTextConverter},
                                Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True
                    , ConverterParameter={StaticResource collectionTipo}}" Visibility="Visible"/>
                    <DataGridTextColumn                        
                        Binding="{Binding Path=nValorouPorcentagem, UpdateSourceTrigger=PropertyChanged}" 
                                        Header="Valor ou Porcentagem" Width="*">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding stValorouPorcentagem}" Value="0"/>
                                            <Condition Binding="{Binding Data.bIsEnabled, Source={StaticResource proxy}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="FrameworkElement.IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                    <!--<MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding stValorouPorcentagem}" Value="1"/>
                                            <Condition Binding="{Binding Data.currentModel.stAlocacao, Source={StaticResource proxy}}" Value="1"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding stValorouPorcentagem}" Value="1"/>
                                            <Condition Binding="{Binding Data.currentModel.stAlocacao, Source={StaticResource proxy}}" Value="3"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding Data.bIsEnabled}" Value="False">
                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                    </DataTrigger>-->
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Expander>
    </Grid>
</runtime:WindowsBase>

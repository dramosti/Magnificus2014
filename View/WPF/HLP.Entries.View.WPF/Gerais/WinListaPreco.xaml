<runtime:WindowsBase
        xmlns:runtime="clr-namespace:HLP.Comum.View.Formularios;assembly=HLP.Comum.View"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ccx="clr-namespace:HLP.Comum.ViewModel.ViewModels.Components;assembly=HLP.Comum.ViewModel"
        xmlns:v="clr-namespace:HLP.Comum.View.Validates;assembly=HLP.Comum.View"
        xmlns:conv="clr-namespace:HLP.Comum.View.Converters;assembly=HLP.Comum.View"
    xmlns:convL ="clr-namespace:HLP.Entries.View.WPF.Gerais.Converters"
		xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:Components="clr-namespace:HLP.Comum.View.Components;assembly=HLP.Comum.View" 
        x:Class="HLP.Entries.View.WPF.Gerais.WinListaPreco"
        Name="winListaPreco"        
        Title="Listas de Preço" Height="660" Width="1024" NameView="vwListaPrecoPai"
    >
    <Window.Resources>
        <ObjectDataProvider x:Key="odp" ObjectType="{x:Type ccx:FillComboBoxViewModel}"/>
        <ObjectDataProvider x:Key="lResultConversao" ObjectInstance="{StaticResource odp}" MethodName="GetAllValuesToComboBox">
            <ObjectDataProvider.MethodParameters>
                <System:String>vwUnidadeMedidaToComboBox</System:String>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="lresultProdutos" ObjectInstance="{StaticResource odp}" MethodName="GetAllValuesToComboBox">
            <ObjectDataProvider.MethodParameters>
                <System:String>vwProdutoToComboBox</System:String>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <conv:PorcentagemConverter x:Key="PorcentagemConverter"/>
        <convL:RowDateListaPrecoConverter x:Key="RowDateConverter"/>
        <convL:StCustoProdutoConverter x:Key="stCustoProdutoConverter"/>
        <conv:MoedaConverter x:Key="moedaConverter"/>
    </Window.Resources>
    <DockPanel LastChildFill="True">
        <Expander Header="Principal" Height="275" IsExpanded="True" DockPanel.Dock="Top">
            <DockPanel LastChildFill="True">
                <WrapPanel Orientation="Vertical" Margin="0,10,0,0" DockPanel.Dock="Top" >
                    <Components:HlpTextBox 
					Text="{Binding currentModel.idListaPrecoPai, Mode=TwoWay}"
					IsReadOnly="True"
					Height="27" Margin="10,0,0,2" Caption="Código" Help="Chave principal do registro da Origem de Venda" WidthLabel="242" HorizontalAlignment="Left" Width="325"/>
                    <Components:HlpTextBox 
					Validation.ErrorTemplate="{StaticResource exceptionComp}"
					Text="{Binding currentModel.xCodigoListaPreco, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					Height="27" Margin="10,0,0,2" Caption="Código da Lista de Preço " Help="Digite um código para a recém-criada Lista de preço " WidthLabel="242" HorizontalAlignment="Left" Width="325"/>
                    <Components:HlpTextBox 
					Validation.ErrorTemplate="{StaticResource exceptionComp}"
					Text="{Binding currentModel.xLista, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					Height="27" Margin="10,0,0,2" Caption="Descrição " Help="Descrição da Lista de preço. " WidthLabel="242" HorizontalAlignment="Left" Width="551"/>
                    <Components:HlpDateTimePicker 
					Validation.ErrorTemplate="{StaticResource exceptionComp}"
					SelectedDate="{Binding currentModel.dListaPreco, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					Height="27" Margin="10,0,0,2" Caption="Data de Criação da Lista de Preço" Help="Este campo mostra a data em que a lista de preços foi gerada " WidthLabel="242" HorizontalAlignment="Left"/>
                    <Components:HlpComboBox 
                        Name="cbxStAtualizacao"
					Validation.ErrorTemplate="{StaticResource exceptionComp}"
					SelectedIndex="{Binding currentModel.stAtualizacao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					Height="27" Margin="10,0,0,2" Caption="Tipo de Atualização" Help="Informar o tipo de atualização para o campo Preço de Venda para essa lista de preço, elas podem ser Manual ou Automática." WidthLabel="242" UCSelectionChanged="cbxStAtualizacao_UCSelectionChanged" HorizontalAlignment="Left">
                        <Components:HlpComboBox.Items>
                            <System:String>0-Automatica</System:String>
                            <System:String>1-Manual</System:String>
                        </Components:HlpComboBox.Items>
                    </Components:HlpComboBox>
                    <Components:HlpPesquisa 
					Validation.ErrorTemplate="{StaticResource exceptionComp}"
					Text="{Binding currentModel.idListaPrecoOrigem, Mode=TwoWay, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"					
					Height="27" Margin="10,0,0,2" Caption="Lista de Preço Origem" Help="Informar qual é a Lista de Preço Origem quando a Lista for automática, o campo só é disponibilizado quando a lista for automática." WidthLabel="242" FieldPesquisa="ID" TableView="vwListaPrecoPai" HorizontalAlignment="Left" Width="551">
                        <Components:HlpPesquisa.Items>
                            <System:String>xCodigoListaPreco</System:String>
                            <System:String>xLista</System:String>
                        </Components:HlpPesquisa.Items>
                        <Components:HlpPesquisa.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=cbxStAtualizacao, Path=SelectedIndex}" Value="1">
                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=bIsEnabled}" Value="False">
                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Components:HlpPesquisa.Style>
                    </Components:HlpPesquisa>
                    <Components:HlpTextBox 
                        x:Name="txtPercentual"                        
					Validation.ErrorTemplate="{StaticResource exceptionComp}"                        
					Text="{Binding currentModel.pPercentual, Mode=TwoWay,
                        Converter={StaticResource PorcentagemConverter},
                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"					
					Height="27" Margin="10,0,0,2" Caption="Percentual" 
                        Help="Este campo serve para se definir o % de acréscimo (valor positivo) ou % de desconto (valor negativo) para a lista que está sendo mostrada na tela e definida como automática, porém para este tipo de cálculo o sistema pegará sempre como base a lista 00001."
                        WidthLabel="242" HorizontalAlignment="Left" Width="325">
                        <Components:HlpTextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=cbxStAtualizacao, Path=SelectedIndex}" Value="1">
                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=bIsEnabled}" Value="False">
                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Components:HlpTextBox.Style>
                    </Components:HlpTextBox>
                    <Button 
                        Command="{Binding gerarListaCommand}"
                        Content="Gerar Lista" Height="27" Margin="252,0,0,2" HorizontalAlignment="Left" Width="97"/>
                    <Components:HlpTextBox 
                        Name="nDiasSemAtual"
					Validation.ErrorTemplate="{StaticResource exceptionComp}"
					Text="{Binding currentModel.nDiasSemAtualicao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					Height="36" Margin="10,0,0,2" Caption="N.° dias sem Atualização no valor de custo" Help="Muda a cor para vermelho no registro que não sofrem alteração no preço de custo a mais do que o número de dias estabelecido no campo" WidthLabel="222" HorizontalAlignment="Left" Width="320"/>
                    <Components:HlpCheckBox 
					Validation.ErrorTemplate="{StaticResource exceptionComp}"
					IsChecked="{Binding currentModel.stContrato, Mode=TwoWay, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					Height="27" Margin="10,0,0,2" Caption="É Contrato" WidthLabel="222" HorizontalAlignment="Left"/>
                    <Components:HlpTextBox 
					Validation.ErrorTemplate="{StaticResource exceptionComp}"
					Text="{Binding currentModel.xNrContrato, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					Height="27" Margin="10,0,0,2" Caption="Nº do Contrato" WidthLabel="222" HorizontalAlignment="Left" Width="320"/>
                    <Components:HlpDateTimePicker 
					Validation.ErrorTemplate="{StaticResource exceptionComp}"
					SelectedDate="{Binding currentModel.dValidadeContrato, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					Height="27" Margin="10,0,0,2" Caption="Data de validade do Contrato" WidthLabel="222" HorizontalAlignment="Left"/>
                    <Components:HlpTextBox 
					Validation.ErrorTemplate="{StaticResource exceptionComp}"
					Text="{Binding currentModel.pDescontoMaximo, Mode=TwoWay, 
                        Converter={StaticResource PorcentagemConverter},
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					Height="27" Margin="10,0,0,2" Caption="Desconto Máximo" WidthLabel="222" HorizontalAlignment="Left" Width="320"/>
                    <Components:HlpTextBox 
					Validation.ErrorTemplate="{StaticResource exceptionComp}"
					Text="{Binding currentModel.pAcressimoMaximo, Mode=TwoWay, 
                        Converter={StaticResource PorcentagemConverter},
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					Height="27" Margin="10,0,0,2" Caption="Acréscimo Máximo" WidthLabel="222" HorizontalAlignment="Left" Width="320"/>
                    <Components:HlpCheckBox 
					Validation.ErrorTemplate="{StaticResource exceptionComp}"
					IsChecked="{Binding currentModel.Ativo, Mode=TwoWay, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					Height="27" Margin="10,0,10,1" Caption="Ativo ?" WidthLabel="222"/>
                </WrapPanel>
            </DockPanel>
        </Expander>
        <Expander Header="Produtos" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsExpanded="True">
            <DockPanel LastChildFill="True">
                <DockPanel DockPanel.Dock="Top" Height="35">
                    <Button
                        IsEnabled="{Binding bIsEnabled}"
                        Name="btnAtribuicaoColetiva"
                        Command="{Binding AtribuicaoColetivaCommand}" CommandParameter="WinAtribuicaoColetivaListaPreco"
                        Content="Atribuição Coletiva" Height="27" Width="121" DockPanel.Dock="Left" Margin="0,0,20,0" />
                    <Button
                        Command="{Binding CarregarProdutosCommand}"
                        IsEnabled="{Binding bIsEnabled}"
                        Content="Carregar todos os produtos" Height="27" Width="157.5" DockPanel.Dock="Left" HorizontalAlignment="Left" />
                </DockPanel>
                <DockPanel>
                    <DataGrid
						 Name="gridItens"
                                    ItemsSource="{Binding currentModel.lLista_preco}"                          
                                    IsEnabled="{Binding bIsEnabled}"
                                    AutoGenerateColumns="False" 
                                    SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
                                    CanUserDeleteRows="True"
                                    CanUserAddRows="True"
                                    CellEditEnding="gridItens_CellEditEnding"
                        >
                        <DataGrid.BindingGroup>
                            <BindingGroup NotifyOnValidationError="True">
                                <BindingGroup.ValidationRules>
                                    <v:ListUniqueValuesValidationRule                                
                                ValidatesOnTargetUpdated="True"                                
                                xCampos="idProduto"></v:ListUniqueValuesValidationRule>
                                </BindingGroup.ValidationRules>
                            </BindingGroup>
                        </DataGrid.BindingGroup>
                        <DataGrid.Columns>
                            <DataGridComboBoxColumn  Header="Produtos" Width="150"
                                        ItemsSource="{Binding Source={StaticResource lresultProdutos}}"
                                        SelectedValuePath="id"
                                        DisplayMemberPath="display"
                                        SelectedValueBinding="{Binding idProduto, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                        />
                            <DataGridTextColumn                                
                                Header="Custo Produto" Width="100"                                
                                ElementStyle="{StaticResource CellErrorStyle}"                                
                                Binding="{Binding Path=vCustoProduto, UpdateSourceTrigger=LostFocus, Mode=TwoWay,
                                Converter={StaticResource moedaConverter},
                                NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                >
                                <DataGridTextColumn.CellStyle>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding idProduto, Converter={StaticResource stCustoProdutoConverter}}" Value="False">
                                                <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn                                
                                        Header="% Lucro" Width="100"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pLucro, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        >
                            </DataGridTextColumn>
                            <DataGridTextColumn                                
                                Header="Valor Venda" Width="100"
                                ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=vVenda, UpdateSourceTrigger=LostFocus,
                                StringFormat={}{0:C},
                                NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                            <DataGridTextColumn                                
                                        Header="% Desc. Máx." Width="100"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pDescontoMaximo, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                            <DataGridTextColumn                                
                                        Header="% Acréc. Máx." Width="100"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pAcrescimoMaximo, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                            <DataGridTextColumn                                
                                        Header="% Comissão à Vista" Width="120"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissaoAvista, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                            <DataGridTextColumn                                
                                        Header="% Comissão à Prazo" Width="120"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissaoAprazo, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                            <DataGridTextColumn                                
                                        Header="% Desconto" Width="120"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pDesconto, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                            <DataGridTextColumn                                
                                        Header="% Comissão" Width="120"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissao, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                            <DataGridTextColumn                                
                                        Header="% Outros" Width="120"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pOutros, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                            <DataGridTextColumn                                
                                        Header="Markup" Width="120" IsReadOnly="True"                                        
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pMarkup, UpdateSourceTrigger=LostFocus,                                            
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                            <DataGridTemplateColumn Header="Data Alteração Custo">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding dAlteracaoCusto, UpdateSourceTrigger=PropertyChanged,
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding dAlteracaoCusto, UpdateSourceTrigger=PropertyChanged,
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"></DatePicker>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridComboBoxColumn  Header="Unidade Medida" Width="150"
                                        ItemsSource="{Binding Source={StaticResource lResultConversao}}"
                                        SelectedValuePath="id"
                                        DisplayMemberPath="display"
                                        SelectedValueBinding="{Binding idUnidadeMedida, Mode=TwoWay, 
                            UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger>
                                        <DataTrigger.Binding>
                                            <MultiBinding Converter="{StaticResource RowDateConverter}">
                                                <Binding Path="dAlteracaoCusto"></Binding>
                                                <Binding Path="DataContext.currentModel.nDiasSemAtualicao" 
                                                         RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}"/>
                                            </MultiBinding>
                                        </DataTrigger.Binding>
                                        <DataTrigger.Value>
                                            False
                                        </DataTrigger.Value>
                                        <Setter Property="Panel.Background" Value="Red"></Setter>

                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>
                </DockPanel>
            </DockPanel>

        </Expander>

    </DockPanel>
</runtime:WindowsBase>

<runtime:WindowsBase 
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:runtime="clr-namespace:HLP.Comum.View.Formularios;assembly=HLP.Comum.View"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:convert="clr-namespace:HLP.Comum.View.Converters;assembly=HLP.Comum.View"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Components="clr-namespace:HLP.Comum.View.Components;assembly=HLP.Comum.View"
        x:Class="HLP.Entries.View.WPF.Transportes.WinTransportadora"
        Title="WinTransportadora" Height="660" Width="1024">
<Window.Resources>
        <convert:MaskConverter x:Key="maskConverter"/>
</Window.Resources>  
	<Grid>
		<TabControl>
			<TabItem Header="Principal">
				<AdornerDecorator>
					<DockPanel LastChildFill="True">
						<DockPanel DockPanel.Dock="Top" Height="233">
							<Expander Header="Identificação" IsExpanded="True" DockPanel.Dock="Left" Width="450">
								<WrapPanel Orientation="Vertical">									
									<Components:HlpTextBox 
										IsReadOnly="True"
										Text="{Binding currentModel.idTransportador, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}"
										Height="27" Margin="10,10,10,2" HorizontalAlignment="Left" Caption="Código" Help="É preenchido com um código sequencial que é gerado pelo próprio sistema." WidthLabel="137" Width="230"/>
									<Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xCodigoAlternativo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,10,2" HorizontalAlignment="Left" Caption="Código Alternativo " Help="O sistema traz o mesmo código de identificação do registro do sistema da transportadora, mas deixa a opção para o usuário mudar." WidthLabel="137" Width="230"/>
									<Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xNome, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,10,2" HorizontalAlignment="Left" Caption="Razão Social" Help="É preenchido com a razão social da Transportadora." WidthLabel="137" Width="426"/>
									<Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xFantasia, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,10,2" HorizontalAlignment="Left" Caption="Nome Fantasia" Help="É preenchido com o nome fantasia da Transportadora." WidthLabel="137" Width="426"/>
									<Components:HlpCheckBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										IsChecked="{Binding currentModel.stPessoa, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,10,2" HorizontalAlignment="Left" Caption="Pessoa Jurídica?" Help="Este campo define se a Transportadora é pessoa jurídica ou física, preenchendo com SIM, o sistema abrirá os campos disponíveis para pessoa jurídica caso contrário os campos disponíveis para pessoa física." WidthLabel="137"/>									
								</WrapPanel>
							</Expander>
							<Expander Header="Documentação" IsExpanded="True">
								<WrapPanel Orientation="Vertical">
									<Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xCnpj, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,10,10,2" HorizontalAlignment="Left" Caption="CNPJ" Help="No caso de Pessoa Jurídica, deverá ser preenchido o CNPJ (Cadastro Nacional de Pessoa Jurídica) da Transportadora. Este campo possui validação e consistência, não sendo aceito qualquer número" WidthLabel="166" Width="285"/>
									<Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xIe, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,10,2" HorizontalAlignment="Left" Caption="Inscrição Estadual" Help="No caso de Pessoa Jurídica deverá ser preenchido com a inscrição estadual da Transportadora. Este campo possui consistência por estado." WidthLabel="166" Width="285"/>
									<Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xIm, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,10,2" HorizontalAlignment="Left" Caption="Inscrição Municipal" Help="No caso de Pessoa Jurídica deverá ser preenchido com a inscrição municipal da Transportadora." WidthLabel="166" Width="285"/>
									<Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xCpf, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,10,2" HorizontalAlignment="Left" Caption="CPF" Help="No caso de Pessoa Física, este campo deverá ser preenchido com o CPF (Cadastro de Pessoa Física) da pessoa. Este campo possui validação e consistência, não sendo aceito qualquer número." WidthLabel="166" Width="285"/>
									<Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xRg, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,10,2" HorizontalAlignment="Left" Caption="RG" Help="No caso de Pessoa Física, deverá ser preenchido com o RG (Registro Geral) da pessoa." WidthLabel="166" Width="285"/>
									<Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xRntrc, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,10,2" HorizontalAlignment="Left" Caption="RNTRC" Help="Informar o Registro Nacional de Transportadores Rodoviários de Carga" WidthLabel="166" Width="285"/>
								</WrapPanel>								
							</Expander>						
						</DockPanel>
						<DockPanel>	
							<Expander Header="Telefones" IsExpanded="True" DockPanel.Dock="Left" Width="450">	
								<WrapPanel Orientation="Vertical">
									<Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xTelefone1, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,10,10,2" Caption="1° Telefone" Help="É preenchido com o telefone principal da Transportadora." WidthLabel="95" Width="214"/>
									<Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xTelefone2, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,10,2" Caption="2° Telefone" Help="É preenchido com o segundo telefone da Transportadora, se houver." WidthLabel="95" Width="214"/>
									<Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xFax, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,10,2" Caption="Fax" Help="É preenchido com o fax principal da Transportadora" WidthLabel="95" Width="214"/>
								</WrapPanel>							
							</Expander>
							<Expander Header="Identificação Eletrônica" IsExpanded="True">	
								<WrapPanel Orientation="Vertical">
									<Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xEmail, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,10,10,2" Caption="E-mail" Help="Preencher o e-mail da transportadora." WidthLabel="158" Width="391"/>
									<Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xHttp, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,10,2" Caption="Endereço da Internet" Help="Informar o endereço da Internet da transportadora." WidthLabel="158" Width="391"/>
									<Components:HlpCheckBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										IsChecked="{Binding currentModel.Ativo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,10,2" Caption="Ativo" Help="Informar se a transportadora esta ou não ativa no sistema." WidthLabel="158"/>
								</WrapPanel>							
							</Expander>						
						</DockPanel>
					</DockPanel>
				</AdornerDecorator>
			</TabItem>
			<TabItem Header="Endereços">
				<AdornerDecorator>
					<DataGrid
						  ItemsSource="{Binding currentModel.lFuncionario_Certificacao}"                          
                          IsEnabled="{Binding bIsEnabled}"
                          AutoGenerateColumns="False" 
                          SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
                          CanUserDeleteRows="True"
                          CanUserAddRows="True">
						<DataGrid.Columns>
							<DataGridComboBoxColumn ClipboardContentBinding="{x:Null}" Header="Principal" SelectedValueBinding="{x:Null}" SelectedItemBinding="{x:Null}" TextBinding="{x:Null}" Width="150"/>
							<DataGridTextColumn 
								ElementStyle="{StaticResource CellErrorStyle}"
								Binding="{Binding Path=xNome, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter},
								ConverterParameter=date,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
								Header="Nome" Width="200"/>
							<DataGridComboBoxColumn ClipboardContentBinding="{x:Null}" Header="Tipo endereço" SelectedValueBinding="{x:Null}" SelectedItemBinding="{x:Null}" TextBinding="{x:Null}" Width="150"/>
							<DataGridTextColumn 
								ElementStyle="{StaticResource CellErrorStyle}"
								Binding="{Binding Path=xCEP, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter},
								ConverterParameter=date,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
								Header="CEP" Width="100"/>
							<DataGridComboBoxColumn ClipboardContentBinding="{x:Null}" Header="Logradouro" SelectedValueBinding="{x:Null}" SelectedItemBinding="{x:Null}" TextBinding="{x:Null}" Width="200"/>
							<DataGridTextColumn 
								ElementStyle="{StaticResource CellErrorStyle}"
								Binding="{Binding Path=xEndereco, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter},
								ConverterParameter=date,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
								Header="Endereço" Width="300"/>
							<DataGridTextColumn 
								ElementStyle="{StaticResource CellErrorStyle}"
								Binding="{Binding Path=nNumero, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter},
								ConverterParameter=date,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
								Header="Número" Width="100"/>
							<DataGridTextColumn 
								ElementStyle="{StaticResource CellErrorStyle}"
								Binding="{Binding Path=xComplemento, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter},
								ConverterParameter=date,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
								Header="Complemento" Width="150"/>
							<DataGridTextColumn 
								ElementStyle="{StaticResource CellErrorStyle}"
								Binding="{Binding Path=xBairro, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter},
								ConverterParameter=date,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
								Header="Bairro" Width="150"/>
							<DataGridTextColumn 
								ElementStyle="{StaticResource CellErrorStyle}"
								Binding="{Binding Path=xLatitude, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter},
								ConverterParameter=date,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
								Header="Latitude" Width="100"/>
							<DataGridTextColumn 
								ElementStyle="{StaticResource CellErrorStyle}"
								Binding="{Binding Path=xLongitude, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter},
								ConverterParameter=date,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
								Header="Longitude" Width="100"/>
							<DataGridTextColumn 
								ElementStyle="{StaticResource CellErrorStyle}"
								Binding="{Binding Path=xFusoHorario, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter},
								ConverterParameter=date,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
								Header="Fuso Horário" Width="100"/>
							<DataGridTextColumn 
								ElementStyle="{StaticResource CellErrorStyle}"
								Binding="{Binding Path=xCaixaPostal, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter},
								ConverterParameter=date,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
								Header="Caixa Postal" Width="100"/>
							<DataGridComboBoxColumn ClipboardContentBinding="{x:Null}" Header="Cidade" SelectedValueBinding="{x:Null}" SelectedItemBinding="{x:Null}" TextBinding="{x:Null}" Width="200"/>
						</DataGrid.Columns>						
					</DataGrid>
				</AdornerDecorator>
			</TabItem>
			<TabItem Header="Contatos / Motoristas / Veículos">
				<AdornerDecorator>
					<DockPanel LastChildFill="True">
						<DockPanel DockPanel.Dock="Top" Height="280">
							<Expander Header="Contatos" IsExpanded="True" DockPanel.Dock="Left" Width="420">
								<DataGrid 
								ItemsSource="{Binding currentModel.lFuncionario_Certificacao}"                          
								IsEnabled="{Binding bIsEnabled}"
								AutoGenerateColumns="False" 
								SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
								CanUserDeleteRows="True"
								CanUserAddRows="True">
									<DataGrid.Columns>
										<DataGridComboBoxColumn ClipboardContentBinding="{x:Null}" Header="Contato" SelectedValueBinding="{x:Null}" SelectedItemBinding="{x:Null}" TextBinding="{x:Null}" Width="*"/>
									</DataGrid.Columns>						
								</DataGrid>								
							</Expander>	
							<Expander Header="Motoristas" IsExpanded="True">
								<DataGrid
								ItemsSource="{Binding currentModel.lFuncionario_Certificacao}"                          
								IsEnabled="{Binding bIsEnabled}"
								AutoGenerateColumns="False" 
								SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
								CanUserDeleteRows="True"
								CanUserAddRows="True">
									<DataGrid.Columns>
										<DataGridComboBoxColumn ClipboardContentBinding="{x:Null}" Header="Contato" SelectedValueBinding="{x:Null}" SelectedItemBinding="{x:Null}" TextBinding="{x:Null}" Width="*"/>
										<DataGridTextColumn 
											ElementStyle="{StaticResource CellErrorStyle}"
											Binding="{Binding Path=xRntrc, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter},
											ConverterParameter=date,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
											Header="Rntrc" Width="150"/>
									</DataGrid.Columns>									
								</DataGrid>								
							</Expander>					
						</DockPanel>
						<DockPanel>
							<Expander Header="Veículos" IsExpanded="True">
								<DataGrid
								ItemsSource="{Binding currentModel.lFuncionario_Certificacao}"                          
								IsEnabled="{Binding bIsEnabled}"
								AutoGenerateColumns="False" 
								SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
								CanUserDeleteRows="True"
								CanUserAddRows="True">
									<DataGrid.Columns>
										<DataGridTextColumn 
											ElementStyle="{StaticResource CellErrorStyle}"
											Binding="{Binding Path=xPlacaVeiculo, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter},
											ConverterParameter=date,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
											Header="Placa do Veículo" Width="200"/>
										<DataGridComboBoxColumn ClipboardContentBinding="{x:Null}" Header="UF" SelectedValueBinding="{x:Null}" SelectedItemBinding="{x:Null}" TextBinding="{x:Null}" Width="250"/>
										<DataGridTextColumn 
											ElementStyle="{StaticResource CellErrorStyle}"
											Binding="{Binding Path=xMarca, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter},
											ConverterParameter=date,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
											Header="Marca" Width="200"/>
										<DataGridTextColumn 
											ElementStyle="{StaticResource CellErrorStyle}"
											Binding="{Binding Path=xModelo, UpdateSourceTrigger=LostFocus, Converter={StaticResource maskConverter},
											ConverterParameter=date,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
											Header="Modelo" Width="200"/>
									</DataGrid.Columns>									
								</DataGrid>
							</Expander>							
						</DockPanel>
					</DockPanel>
				</AdornerDecorator>
			</TabItem>
		</TabControl>
	</Grid>
</runtime:WindowsBase>

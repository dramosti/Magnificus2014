<runtime:WindowsBase 
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:runtime="clr-namespace:HLP.Comum.View.Formularios;assembly=HLP.Comum.View"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:convert="clr-namespace:HLP.Comum.View.Converters;assembly=HLP.Comum.View"
        xmlns:enums="clr-namespace:HLP.Comum.Resources.RecursosBases;assembly=HLP.Comum.Resources"
        xmlns:v="clr-namespace:HLP.Comum.View.Validates;assembly=HLP.Comum.View"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Components="clr-namespace:HLP.Comum.View.Components;assembly=HLP.Comum.View"
        x:Class="HLP.Entries.View.WPF.Transportes.WinTransportadora"
        xmlns:src="clr-namespace:HLP.Comum.ViewModel.ViewModels.Components;assembly=HLP.Comum.ViewModel"
        Title="WinTransportadora" Height="660" Width="1024" NameView="vwTransportador">
    <Window.Resources>
        <convert:MaskConverter x:Key="maskConverter"/>
        <convert:ByteToBoolConverter x:Key="ByteToBoolConverter"/>
        <convert:PorcentagemConverter x:Key="porcentagemConverter"/>
        <ObjectDataProvider 
            MethodName="GetDict"
            ObjectType="{x:Type convert:EnumDescriptionConverter}"
            x:Key="EnumDescriptionDict">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:TipoEndereco"></x:Type>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider 
            MethodName="GetDict"
            ObjectType="{x:Type convert:EnumDescriptionConverter}"
            x:Key="EnumTipoLogradouro">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:TipoLogradouro"></x:Type>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="odp" ObjectType="{x:Type src:FillComboBoxViewModel}"/>
        <ObjectDataProvider x:Key="lresult" ObjectInstance="{StaticResource odp}" MethodName="GetAllValuesToComboBox">
            <ObjectDataProvider.MethodParameters>
                <System:String>vwCidadeToComboBox</System:String>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="lcontatos" ObjectInstance="{StaticResource odp}" MethodName="GetAllValuesToComboBox">
            <ObjectDataProvider.MethodParameters>
                <System:String>vwContatoToComboBox</System:String>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="lUF" ObjectInstance="{StaticResource odp}" MethodName="GetAllValuesToComboBox">
            <ObjectDataProvider.MethodParameters>
                <System:String>vwUFToComboBox</System:String>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Grid>
        <TabControl>
            <TabItem Header="Principal">
                <AdornerDecorator>
                    <DockPanel LastChildFill="True">
                        <DockPanel DockPanel.Dock="Top" Height="233">
                            <Expander Header="Identificação" IsExpanded="True" DockPanel.Dock="Left" Width="450">
                                <WrapPanel Orientation="Vertical" Margin="0,10,0,0">
                                    <Components:HlpTextBox 
										IsReadOnly="True"
										Text="{Binding currentModel.idTransportador, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}"
										Height="27" Margin="10,0,0,2" HorizontalAlignment="Left" Caption="Código" Help="É preenchido com um código sequencial que é gerado pelo próprio sistema." WidthLabel="137" Width="230"/>
                                    <Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xCodigoAlternativo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,0,2" HorizontalAlignment="Left" Caption="Código Alternativo " Help="O sistema traz o mesmo código de identificação do registro do sistema da transportadora, mas deixa a opção para o usuário mudar." WidthLabel="137" Width="230"/>
                                    <Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xNome, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,0,2" HorizontalAlignment="Left" Caption="Razão Social" Help="É preenchido com a razão social da Transportadora." WidthLabel="137" Width="426"/>
                                    <Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xFantasia, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,0,2" HorizontalAlignment="Left" Caption="Nome Fantasia" Help="É preenchido com o nome fantasia da Transportadora." WidthLabel="137" Width="426"/>
                                    <Components:HlpCheckBox x:Name="chkPessoa"  
										Validation.ErrorTemplate="{StaticResource exceptionComp}" 
										IsChecked="{Binding currentModel.stPessoa, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,0,2" HorizontalAlignment="Left" Caption="Pessoa Jurídica?" Help="Este campo define se a Transportadora é pessoa jurídica ou física, preenchendo com SIM, o sistema abrirá os campos disponíveis para pessoa jurídica caso contrário os campos disponíveis para pessoa física." WidthLabel="137"/>
                                </WrapPanel>
                            </Expander>
                            <Expander Header="Documentação" IsExpanded="True">
                                <WrapPanel Orientation="Vertical" Margin="0,10,0,0">
                                    <Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xCnpj, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource maskConverter}, ConverterParameter=cnpj}"										
										Height="27" Margin="10,0,0,2" HorizontalAlignment="Left" Caption="CNPJ" Help="No caso de Pessoa Jurídica, deverá ser preenchido o CNPJ (Cadastro Nacional de Pessoa Jurídica) da Transportadora. Este campo possui validação e consistência, não sendo aceito qualquer número" WidthLabel="166" Width="285">
                                        <Components:HlpTextBox.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=chkPessoa, Path=IsChecked}" Value="False">
                                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=bIsEnabled}" Value="False">
                                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Components:HlpTextBox.Style>
                                    </Components:HlpTextBox>
                                    <Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xIe, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"										
										Height="27" Margin="10,0,0,2" HorizontalAlignment="Left" Caption="Inscrição Estadual" Help="No caso de Pessoa Jurídica deverá ser preenchido com a inscrição estadual da Transportadora. Este campo possui consistência por estado." WidthLabel="166" Width="285">
                                        <Components:HlpTextBox.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=chkPessoa, Path=IsChecked}" Value="False">
                                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=bIsEnabled}" Value="False">
                                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Components:HlpTextBox.Style>
                                    </Components:HlpTextBox>
                                    <Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xIm, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										Height="27" Margin="10,0,0,2" HorizontalAlignment="Left" Caption="Inscrição Municipal" Help="No caso de Pessoa Jurídica deverá ser preenchido com a inscrição municipal da Transportadora." WidthLabel="166" Width="285">
                                        <Components:HlpTextBox.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=chkPessoa, Path=IsChecked}" Value="False">
                                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=bIsEnabled}" Value="False">
                                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Components:HlpTextBox.Style>
                                    </Components:HlpTextBox>
                                    <Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xCpf, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"										
										Height="27" Margin="10,0,0,2" HorizontalAlignment="Left" Caption="CPF" Help="No caso de Pessoa Física, este campo deverá ser preenchido com o CPF (Cadastro de Pessoa Física) da pessoa. Este campo possui validação e consistência, não sendo aceito qualquer número." WidthLabel="166" Width="285">
                                        <Components:HlpTextBox.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=chkPessoa, Path=IsChecked}" Value="True">
                                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=bIsEnabled}" Value="False">
                                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Components:HlpTextBox.Style>
                                    </Components:HlpTextBox>
                                    <Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xRg, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"									
										Height="27" Margin="10,0,0,2" HorizontalAlignment="Left" Caption="RG" Help="No caso de Pessoa Física, deverá ser preenchido com o RG (Registro Geral) da pessoa." WidthLabel="166" Width="285">
                                        <Components:HlpTextBox.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=chkPessoa, Path=IsChecked}" Value="True">
                                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=bIsEnabled}" Value="False">
                                                        <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Components:HlpTextBox.Style>
                                    </Components:HlpTextBox>
                                    <Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xRntrc, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,0,2" HorizontalAlignment="Left" Caption="RNTRC" Help="Informar o Registro Nacional de Transportadores Rodoviários de Carga" WidthLabel="166" Width="285"/>
                                </WrapPanel>
                            </Expander>
                        </DockPanel>
                        <DockPanel>
                            <Expander Header="Telefones" IsExpanded="True" DockPanel.Dock="Left" Width="450">
                                <WrapPanel Orientation="Vertical" Margin="0,10,0,0">
                                    <Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xTelefone1, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource maskConverter}, ConverterParameter=tel}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,0,2" Caption="1° Telefone" Help="É preenchido com o telefone principal da Transportadora." WidthLabel="95" Width="214" HorizontalAlignment="Left"/>
                                    <Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xTelefone2, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource maskConverter}, ConverterParameter=tel}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,0,2" Caption="2° Telefone" Help="É preenchido com o segundo telefone da Transportadora, se houver." WidthLabel="95" Width="214" HorizontalAlignment="Left"/>
                                    <Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xFax, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Converter={StaticResource maskConverter}, ConverterParameter=tel}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,0,2" Caption="Fax" Help="É preenchido com o fax principal da Transportadora" WidthLabel="95" Width="214" HorizontalAlignment="Left"/>
                                </WrapPanel>
                            </Expander>
                            <Expander Header="Identificação Eletrônica" IsExpanded="True">
                                <WrapPanel Orientation="Vertical" Margin="0,10,0,0">
                                    <Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xEmail, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,0,2" Caption="E-mail" Help="Preencher o e-mail da transportadora." WidthLabel="158" Width="391" HorizontalAlignment="Left"/>
                                    <Components:HlpTextBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										Text="{Binding currentModel.xHttp, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,0,2" Caption="Endereço da Internet" Help="Informar o endereço da Internet da transportadora." WidthLabel="158" Width="391" HorizontalAlignment="Left"/>
                                    <Components:HlpCheckBox 
										Validation.ErrorTemplate="{StaticResource exceptionComp}"
										IsChecked="{Binding currentModel.Ativo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										IsEnabled="{Binding bIsEnabled}"
										Height="27" Margin="10,0,0,2" Caption="Ativo" Help="Informar se a transportadora esta ou não ativa no sistema." WidthLabel="158" HorizontalAlignment="Left"/>
                                </WrapPanel>
                            </Expander>
                        </DockPanel>
                    </DockPanel>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Endereços">
                <AdornerDecorator>
                    <DataGrid 
                         x:Name="dgvEndereco"
                         ItemsSource="{Binding currentModel.lTransportador_Endereco}"                          
                         IsEnabled="{Binding bIsEnabled}"
                         AutoGenerateColumns="False" 
                         SelectionUnit="CellOrRowHeader" 
                         CanUserReorderColumns="False"  
                         CanUserDeleteRows="True" 
                         CurrentCellChanged="dgvEndereco_CurrentCellChanged" >
                        <DataGrid.BindingGroup>
                            <BindingGroup NotifyOnValidationError="True">
                                <BindingGroup.ValidationRules>
                                    <v:ListUniqueValueTrueValidationRule                                
                                ValidatesOnTargetUpdated="True"
                                xCampo="stPrincipal"/>
                                </BindingGroup.ValidationRules>
                            </BindingGroup>
                        </DataGrid.BindingGroup>
                        <DataGrid.Columns>
                            <DataGridTextColumn     Header="Nome" Width="100" ElementStyle="{StaticResource CellErrorStyle}"
                                            Binding="{Binding Path=xNome, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>
                            <DataGridTemplateColumn Header="Principal" Width="60">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding stPrincipal, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ByteToBoolConverter}}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <CheckBox  IsChecked="{Binding stPrincipal, Converter={StaticResource ByteToBoolConverter}}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn  Header="Tipo Endereço" Width="250">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox 
                                            ItemsSource="{Binding Source={StaticResource EnumDescriptionDict}}"
                                            DisplayMemberPath="Key"
                                            SelectedValuePath="Value"
                                            SelectedValue ="{Binding enumTipoEndereco, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="CEP" Width="100"
                                ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=xCEP, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True, Converter={StaticResource maskConverter}, ConverterParameter=cep}"/>

                            <DataGridTemplateColumn  Header="Cidades" Width="200">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox 
                            ItemsSource="{Binding Source={StaticResource lresult}}"
                            SelectedValuePath="id"
                            DisplayMemberPath="display"
                            SelectedValue="{Binding idCidade, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True,  ValidatesOnDataErrors=True }" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn  Header="Logradouro" Width="160">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox 
                                            ItemsSource="{Binding Source={StaticResource EnumTipoLogradouro}}"
                                            DisplayMemberPath="Key"
                                            SelectedValuePath="Value"
                                            SelectedValue="{Binding enumTipoLogradouro, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>


                            <DataGridTextColumn Header="Endereço" Width="100" 
                                                ElementStyle="{StaticResource CellErrorStyle}"
                                            Binding="{Binding Path=xEndereco, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>
                            <DataGridTextColumn Header="Numero" Width="80" 
                                                ElementStyle="{StaticResource CellErrorStyle}"
                                            Binding="{Binding Path=nNumero, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>
                            <DataGridTextColumn Header="Bairro" Width="100" 
                                                ElementStyle="{StaticResource CellErrorStyle}"
                                            Binding="{Binding Path=xBairro, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>
                            <DataGridTextColumn Header="Latitude" Width="60" 
                                                ElementStyle="{StaticResource CellErrorStyle}"
                                            Binding="{Binding Path=xLatitude, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>
                            <DataGridTextColumn Header="Latitude" Width="60" 
                                                ElementStyle="{StaticResource CellErrorStyle}"
                                            Binding="{Binding Path=xLongitude, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>
                            <DataGridTextColumn Header="Fuso Horario" Width="80" 
                                                ElementStyle="{StaticResource CellErrorStyle}"
                                            Binding="{Binding Path=xFusoHorario, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>
                            <DataGridTextColumn Header="Caixa Postal" Width="80" 
                                                ElementStyle="{StaticResource CellErrorStyle}"
                                            Binding="{Binding Path=xCaixaPostal, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>
                        </DataGrid.Columns>

                    </DataGrid>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Contatos / Motoristas / Veículos">
                <AdornerDecorator>
                    <DockPanel LastChildFill="True">
                        <DockPanel DockPanel.Dock="Top" Height="280">
                            <Expander Header="Contatos" IsExpanded="True" DockPanel.Dock="Left" Width="420">
                                <DataGrid
                                        x:Name="dgvContato"
                                         ItemsSource="{Binding currentModel.lTransportador_Contato}"                          
                                         IsEnabled="{Binding bIsEnabled}"
                                         AutoGenerateColumns="False" 
                                         SelectionUnit="CellOrRowHeader" 
                                         CanUserReorderColumns="False"  
                                         CanUserDeleteRows="True" >
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn  Header="Contatos" Width="*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox
                                                        ItemsSource="{Binding Source={StaticResource lcontatos}}"
                                                        SelectedValuePath="id"
                                                        DisplayMemberPath="display"
                                                        SelectedValue="{Binding idContato, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True,  ValidatesOnDataErrors=True}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>


                                    </DataGrid.Columns>
                                </DataGrid>

                            </Expander>
                            <Expander Header="Motoristas" IsExpanded="True">
                                <DataGrid
								ItemsSource="{Binding currentModel.lTransportador_Motorista}"                          
								IsEnabled="{Binding bIsEnabled}"
								AutoGenerateColumns="False" 
								SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
								CanUserDeleteRows="True"
								CanUserAddRows="True">
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn Header="Contatos" Width="*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox  
                                            ItemsSource="{Binding Source={StaticResource lcontatos}}"
                                            SelectedValuePath="id"
                                            DisplayMemberPath="display"
                                            SelectedValue="{Binding idContato, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True,  ValidatesOnDataErrors=True}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn 
											ElementStyle="{StaticResource CellErrorStyle}"
											Binding="{Binding Path=xRntrc, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
											Header="Rntrc" Width="150"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Expander>
                        </DockPanel>
                        <DockPanel>
                            <Expander Header="Veículos" IsExpanded="True">
                                <DataGrid
								ItemsSource="{Binding currentModel.lTransportador_Veiculos}"                          
								IsEnabled="{Binding bIsEnabled}"
								AutoGenerateColumns="False" 
								SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
								CanUserDeleteRows="True"
								CanUserAddRows="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn 
											ElementStyle="{StaticResource CellErrorStyle}"
											Binding="{Binding Path=xPlacaVeiculo, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True, Converter={StaticResource maskConverter}, ConverterParameter=placa}"
											Header="Placa do Veículo" Width="200"/>
                                        <DataGridTemplateColumn   Header="UF" Width="*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox
                                                ItemsSource="{Binding Source={StaticResource lUF}}"
                                                SelectedValuePath="id"
                                                DisplayMemberPath="display"
                                                SelectedValue="{Binding idUf, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True,  ValidatesOnDataErrors=True }" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn 
											ElementStyle="{StaticResource CellErrorStyle}"
											Binding="{Binding Path=xMarca, UpdateSourceTrigger=LostFocus,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
											Header="Marca" Width="200"/>
                                        <DataGridTextColumn 
											ElementStyle="{StaticResource CellErrorStyle}"
											Binding="{Binding Path=xModelo, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
											Header="Modelo" Width="200"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Expander>
                        </DockPanel>
                    </DockPanel>
                </AdornerDecorator>
            </TabItem>
        </TabControl>
    </Grid>
</runtime:WindowsBase>

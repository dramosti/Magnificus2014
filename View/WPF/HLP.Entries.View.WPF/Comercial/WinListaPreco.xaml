<runtime:WindowsBase
        xmlns:runtime="clr-namespace:HLP.Comum.View.Formularios;assembly=HLP.Comum.View"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"        
        xmlns:ccx="clr-namespace:HLP.Comum.ViewModel.ViewModels.Components;assembly=HLP.Comum.ViewModel"
        xmlns:v="clr-namespace:HLP.Comum.View.Validates;assembly=HLP.Comum.View"
        xmlns:conv="clr-namespace:HLP.Comum.View.Converters;assembly=HLP.Comum.View"
        xmlns:convL ="clr-namespace:HLP.Entries.View.WPF.Comercial.Converter"
		xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:Components="clr-namespace:HLP.Comum.View.Components;assembly=HLP.Comum.View" 
        xmlns:util="clr-namespace:HLP.Comum.Infrastructure.Util;assembly=HLP.Comum.Infrastructure"
        x:Class="HLP.Entries.View.WPF.Comercial.WinListaPreco"
        Name="winListaPreco"        
        Title="Listas de Preço" Height="660" Width="1024" NameView="vwListaPrecoPai">
    <Window.Resources>
        <conv:ComboBoxDisplayConverter x:Key="cbxDisplayConv"/>
        <convL:CanUserAddListaItensConverter x:Key="canUserAddListaItensConv"></convL:CanUserAddListaItensConverter>
        <ObjectDataProvider x:Key="odp" ObjectType="{x:Type ccx:FillComboBoxViewModel}"/>
        <ObjectDataProvider x:Key="lResultConversao" ObjectInstance="{StaticResource odp}" MethodName="GetAllValuesToComboBox">
            <ObjectDataProvider.MethodParameters>
                <System:String>vwUnidadeMedidaToComboBox</System:String>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="lresultProdutos" ObjectInstance="{StaticResource odp}" MethodName="GetAllValuesToComboBox">
            <ObjectDataProvider.MethodParameters>
                <System:String>vwProdutoToComboBox</System:String>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>        
        <conv:VisibilityVisibleToCollapsedNot x:Key="visibilityConverter"></conv:VisibilityVisibleToCollapsedNot>
        <conv:PorcentagemConverter x:Key="PorcentagemConverter"/>
        <convL:RowDateListaPrecoConverter x:Key="RowDateConverter"/>
        <convL:StCustoProdutoConverter x:Key="stCustoProdutoConverter"/>
        <conv:MoedaConverter x:Key="moedaConverter"/>
        <util:BindingProxy x:Key="proxy" Data="{Binding}" />
    </Window.Resources>
    <DockPanel LastChildFill="True">
        <Expander Header="Principal" IsExpanded="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="281*"></RowDefinition>
                    <RowDefinition Height="2.5"></RowDefinition>
                    <RowDefinition Height="319*"></RowDefinition>
                </Grid.RowDefinitions>
                <GridSplitter Grid.Row="1" HorizontalAlignment="Center" Height="2.5" VerticalAlignment="Stretch" ResizeDirection="Rows" Width="200" Background="#FF4774B5"/>
                <ScrollViewer>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"></ColumnDefinition>
                            <ColumnDefinition Width="213*"></ColumnDefinition>
                            <ColumnDefinition Width="107*"/>
                            <ColumnDefinition Width="45*"></ColumnDefinition>
                            <ColumnDefinition Width="93*"/>
                            <ColumnDefinition Width="57*"/>
                            <ColumnDefinition Width="253*"></ColumnDefinition>
                            <ColumnDefinition Width="134*"></ColumnDefinition>
                            <ColumnDefinition Width="102*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="27"/>
                            <RowDefinition Height="3"/>
                            <RowDefinition Height="27"/>
                            <RowDefinition Height="3"/>
                            <RowDefinition Height="27"/>
                            <RowDefinition Height="3"/>
                            <RowDefinition Height="27"/>
                            <RowDefinition Height="3"/>
                            <RowDefinition Height="27"/>
                            <RowDefinition Height="3"/>
                            <RowDefinition Height="27"/>
                            <RowDefinition Height="3"/>
                            <RowDefinition Height="27"/>
                            <RowDefinition Height="3"/>
                            <RowDefinition Height="27"/>

                        </Grid.RowDefinitions>
                        <!--Label Componentes-->
                        <Components:CustomTextBlock Grid.Column="1" Grid.Row="1" Text="Código" VerticalAlignment="Center" Margin="0,5" Height="18"/>
                        <Components:CustomTextBlock Grid.Column="1" Grid.Row="3" Text="Código da Lista de Preço" VerticalAlignment="Center" Margin="0,5" Height="18"/>
                        <Components:CustomTextBlock Grid.Column="1" Grid.Row="5" Text="Descrição" VerticalAlignment="Center" Margin="0,5" Height="18"/>
                        <Components:CustomTextBlock Grid.Column="1" Grid.Row="7" Text="Data de Criação" VerticalAlignment="Center" Margin="0,5" Height="18"/>
                        <Components:CustomTextBlock Grid.Column="1" Grid.Row="9" Text="Tipo de Atualização" VerticalAlignment="Center" Margin="0,5" Height="18"/>
                        <Components:CustomTextBlock Grid.Column="1" Grid.Row="11" Text="Lista de Preço Origem" VerticalAlignment="Center" Margin="0,5" Height="18"/>
                        <Components:CustomTextBlock Grid.Column="1" Grid.Row="13" Text="Percentual" VerticalAlignment="Center" Margin="0,5" Height="18"/>
                        <Components:CustomTextBlock Grid.Column="6" Grid.Row="1" Text="N.° dias sem Atualização no valor de custo" VerticalAlignment="Center" Margin="0,5" Height="18"/>
                        <Components:CustomTextBlock Grid.Column="6" Grid.Row="3" Text="É Contrato" VerticalAlignment="Center" Margin="0,5" Height="18"/>
                        <Components:CustomTextBlock Grid.Column="6" Grid.Row="5" Text="Nº do Contrato" VerticalAlignment="Center" Margin="0,5" Height="18"/>
                        <Components:CustomTextBlock Grid.Column="6" Grid.Row="7" Text="Data de validade da Lista" VerticalAlignment="Center" Margin="0,5" Height="18"/>
                        <Components:CustomTextBlock Grid.Column="6" Grid.Row="9" Text="Desconto Máximo" VerticalAlignment="Center" Margin="0,5" Height="18"/>
                        <Components:CustomTextBlock Grid.Column="6" Grid.Row="11" Text="Acréscimo Máximo" VerticalAlignment="Center" Margin="0,5" Height="18"/>
                        <Components:CustomTextBlock Grid.Column="6" Grid.Row="13" Text="Ativo ?" VerticalAlignment="Center" Margin="0,5" Height="18"/>

                        <!--Fim Label-->

                        <!--Componentes-->

                        <Button Grid.Column="2" Grid.Row="21"
                        Command="{Binding gerarListaCommand}"
                        Content="Gerar Lista"/>

                        <Components:CustomTextBox
                    Grid.Column="2" Grid.Row="1"
                    Text="{Binding currentModel.idListaPrecoPai, Mode=TwoWay}"
					IsReadOnly="True"
					ToolTip="Chave principal do registro da Origem de Venda"/>
                        <Components:CustomTextBox
                    Grid.Column="2" Grid.Row="3"
                    Text="{Binding currentModel.xCodigoListaPreco, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="Digite um código para a recém-criada Lista de preço "/>
                        <Components:CustomTextBox
                    Grid.Column="2" Grid.Row="5"
                    Text="{Binding currentModel.xLista, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="Descrição da Lista de preço"/>
                        <Components:CustomDatePicker
                    Grid.Column="2" Grid.Row="7"
                    SelectedDate="{Binding currentModel.dListaPreco, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="Este campo mostra a data em que a lista de preços foi gerada "/>
                        <Components:CustomComboBox
                    Grid.Column="2" Grid.Row="9" Grid.ColumnSpan="2"
                    Name="cbxStAtualizacao"					
					SelectedIndex="{Binding currentModel.stAtualizacao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="Informar o tipo de atualização para o campo Preço de Venda para essa lista de preço, elas podem ser Manual ou Automática." SelectionChanged="cbxStAtualizacao_UCSelectionChanged">
                            <Components:CustomComboBox.Items>
                                <System:String>0-Automatica</System:String>
                                <System:String>1-Manual</System:String>
                            </Components:CustomComboBox.Items>
                        </Components:CustomComboBox>
                        <Components:HlpPesquisa 
					Grid.Column="2" Grid.Row="11" Grid.ColumnSpan="3"
					Text="{Binding currentModel.idListaPrecoOrigem, Mode=TwoWay, 
                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"					
					ToolTip="Informar qual é a Lista de Preço Origem quando a Lista for automática, o campo só é disponibilizado quando a lista for automática." WidthLabel="0" FieldPesquisa="ID" TableView="vwListaPrecoPai">
                            <Components:HlpPesquisa.Items>
                                <System:String>xCodigoListaPreco</System:String>
                                <System:String>xLista</System:String>
                            </Components:HlpPesquisa.Items>
                            <Components:HlpPesquisa.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=cbxStAtualizacao, Path=SelectedIndex}" Value="1">
                                            <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=bIsEnabled}" Value="False">
                                            <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Components:HlpPesquisa.Style>
                        </Components:HlpPesquisa>
                        <Components:CustomTextBox
                    Grid.Column="2" Grid.Row="13"
                    x:Name="txtPercentual"                	                        
					Text="{Binding currentModel.pPercentual, Mode=TwoWay,
                        Converter={StaticResource PorcentagemConverter},
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"					     
                        ToolTip="Este campo serve para se definir o % de acréscimo (valor positivo) ou % de desconto (valor negativo) para a lista que está sendo mostrada na tela e definida como automática, porém para este tipo de cálculo o sistema pegará sempre como base a lista 00001.">
                            <Components:CustomTextBox.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=cbxStAtualizacao, Path=SelectedIndex}" Value="1">
                                            <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=bIsEnabled}" Value="False">
                                            <Setter Property="FrameworkElement.IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Components:CustomTextBox.Style>
                        </Components:CustomTextBox>
                        <Components:CustomTextBox
                    Grid.Column="7" Grid.Row="1"
                    Name="nDiasSemAtual"					
					Text="{Binding currentModel.nDiasSemAtualicao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="Muda a cor para vermelho no registro que não sofrem alteração no preço de custo a mais do que o número de dias estabelecido no campos"/>
                        <Components:CustomCheckBox
                    Grid.Column="7" Grid.Row="3" VerticalAlignment="Center"
                    IsChecked="{Binding currentModel.stContrato, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"                       			
					IsEnabled="{Binding bIsEnabled}"/>
                        <Components:CustomTextBlock
                    Grid.Column="7" Grid.Row="5"
                    Text="{Binding currentModel.xNrContrato, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"/>
                        <Components:CustomDatePicker
                    Grid.Column="7" Grid.Row="7"
                    SelectedDate="{Binding currentModel.dValidadeContrato, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"/>
                        <Components:CustomTextBox
                    Grid.Column="7" Grid.Row="9"
                    Text="{Binding currentModel.pDescontoMaximo, Mode=TwoWay, 
                    Converter={StaticResource PorcentagemConverter},
                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"/>
                        <Components:CustomTextBox
                    Grid.Column="7" Grid.Row="11"
                    Text="{Binding currentModel.pAcressimoMaximo, Mode=TwoWay, 
                    Converter={StaticResource PorcentagemConverter},
                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"/>
                        <Components:CustomCheckBox
                    Grid.Column="7" Grid.Row="13" VerticalAlignment="Center"
                    IsChecked="{Binding currentModel.Ativo, Mode=TwoWay, 
                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"/>

                        <!--Fim Componentes-->

                    </Grid>
                </ScrollViewer>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="200*" MaxWidth="200" MinWidth="200"></ColumnDefinition>
                        <ColumnDefinition Width="13*"></ColumnDefinition>
                        <ColumnDefinition Width="200*" MaxWidth="200" MinWidth="200"></ColumnDefinition>
                        <ColumnDefinition Width="591*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Button Grid.Column="1" Grid.Row="1"
                        IsEnabled="{Binding bIsEnabled}"
                        Name="btnAtribuicaoColetiva"
                        Command="{Binding AtribuicaoColetivaCommand}" CommandParameter="WinAtribuicaoColetivaListaPreco"
                        Content="Atribuição Coletiva"/>

                    <DockPanel Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="4" LastChildFill="True">
                        <StackPanel Height="30" Visibility="{Binding visAumentoVlr}" HorizontalAlignment="Left" Orientation="Horizontal" DockPanel.Dock="Top">
                            <ComboBox Width="150" SelectedIndex="{Binding byteIndex, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBoxItem>Preço de Venda</ComboBoxItem>
                                <ComboBoxItem>Custo do Produto</ComboBoxItem>
                            </ComboBox>
                            <TextBlock>% de aumento</TextBlock>
                            <TextBox Width="80" Text="{Binding dPorcAumento, Converter={StaticResource PorcentagemConverter}}"></TextBox>
                            <Button Width="70" Command="{Binding ConfAumVlrVendaCommand}">Confirmar</Button>
                            <Button Width="70" Command="{Binding CancAumVlrVendaCommand}">Cancelar</Button>
                        </StackPanel>
                        <Button Content="Produtos" Style="{StaticResource ButtonDatagridName}" Margin="5,0,0,-5" HorizontalAlignment="Left" Width="100" DockPanel.Dock="Top"/>
                        <DataGrid
						 Name="gridItens"
                                    ItemsSource="{Binding currentModel.lLista_preco}"                          
                                    IsEnabled="{Binding bIsEnabled}"
                                    AutoGenerateColumns="False" 
                                    SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
                                    CanUserDeleteRows="{Binding visAumentoVlr, Converter={StaticResource canUserAddListaItensConv}}"
                                    CanUserAddRows="{Binding visAumentoVlr, Converter={StaticResource canUserAddListaItensConv}}"
                                    CellEditEnding="gridItens_CellEditEnding"
                        >                            
                            <DataGrid.BindingGroup>
                                <BindingGroup NotifyOnValidationError="True">
                                    <BindingGroup.ValidationRules>
                                        <v:ListUniqueValuesValidationRule                                
                                ValidatesOnTargetUpdated="True"                                
                                xCampos="idProduto"></v:ListUniqueValuesValidationRule>
                                    </BindingGroup.ValidationRules>
                                </BindingGroup>
                            </DataGrid.BindingGroup>
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Binding="{Binding bChecked}"
                                                        Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}}"
                                                        >
                                    <DataGridCheckBoxColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Data.bCheckAll, Source={StaticResource proxy}}"></CheckBox>
                                        </DataTemplate>
                                    </DataGridCheckBoxColumn.HeaderTemplate>
                                </DataGridCheckBoxColumn>
                                <DataGridTemplateColumn x:Name="clProdutos" Header="Produtos" Width="150">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=idProduto, Converter={StaticResource cbxDisplayConv}, 
                                            ConverterParameter={StaticResource lresultProdutos}}"
                                                   />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <Grid FocusManager.FocusedElement="{Binding ElementName= cbxStUsuario}" >
                                                <ComboBox x:Name="cbxStUsuario"
                ItemsSource="{Binding Source={StaticResource lresultProdutos}}"
                                            SelectedValuePath="id"
                                            DisplayMemberPath="display"                      
            SelectedValue="{Binding idProduto,
                                UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
                                                      IsSynchronizedWithCurrentItem="False"/>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn                                
                                Header="Custo Produto" Width="100"                                
                                ElementStyle="{StaticResource CellErrorStyle}"                                
                                Binding="{Binding Path=vCustoProduto, UpdateSourceTrigger=LostFocus, Mode=TwoWay,
                                Converter={StaticResource moedaConverter},
                                NotifyOnValidationError=True, ValidatesOnDataErrors=True}">
                                    <DataGridTextColumn.CellStyle>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding idProduto, Converter={StaticResource stCustoProdutoConverter}}" Value="False">
                                                    <Setter Property="FrameworkElement.IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="% Desconto" Width="120"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pDesconto, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="% Comissão" Width="120"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissao, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="% Outros" Width="120"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pOutros, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                <DataGridTextColumn Visibility="{Binding ElementName=winListaPreco, Path=DataContext.visAumentoVlr, Converter={StaticResource visibilityConverter}}"                               
                                        Header="% Lucro" Width="100"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pLucro, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        >
                                </DataGridTextColumn>
                                <DataGridTextColumn                                
                                Header="Valor Venda" Width="100"
                                ElementStyle="{StaticResource CellErrorStyle}"
                                Binding="{Binding Path=vVenda, UpdateSourceTrigger=LostFocus,
                                StringFormat={}{0:C},
                                NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                                <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="% Desc. Máx." Width="100"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pDescontoMaximo, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="% Acréc. Máx." Width="100"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pAcrescimoMaximo, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="% Comissão à Vista" Width="120"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissaoAvista, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="% Comissão à Prazo" Width="120"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissaoAprazo, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="Markup" Width="120" IsReadOnly="True"                                        
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pMarkup, UpdateSourceTrigger=LostFocus,                                            
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                <DataGridTemplateColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                    x:Name="dtAlterCusto" Header="Data Alteração Custo" Width="125">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=dAlteracaoCusto}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <Grid FocusManager.FocusedElement="{Binding ElementName= dateScheduledPicker}" >
                                                <DatePicker x:Name="dateScheduledPicker" SelectedDate="{Binding Path=dAlteracaoCusto
                                                , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnExceptions=true, NotifyOnValidationError=true}" />
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                    x:Name="clUnidMedida" Header="Unidade Medida" Width="150" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=idUnidadeMedida, Converter={StaticResource cbxDisplayConv}, 
                                            ConverterParameter={StaticResource lResultConversao}}"
                                                   />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <Grid FocusManager.FocusedElement="{Binding ElementName= cbxEdit}" >
                                                <ComboBox x:Name="cbxEdit"                                                      
                ItemsSource="{Binding Source={StaticResource lResultConversao}}" 
                                                      SelectedValuePath="id"
                                            DisplayMemberPath="display"                                
            SelectedValue="{Binding idUnidadeMedida,
                                UpdateSourceTrigger=LostFocus}"
                                                      IsSynchronizedWithCurrentItem="False"/>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Binding="{Binding vlrEsperado, Converter={StaticResource moedaConverter}}" 
                                                    Header="Vlr. Final" 
                                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}}"
                                                    >

                                </DataGridTextColumn>
                            </DataGrid.Columns>
                            <DataGrid.RowStyle>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger>
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource RowDateConverter}">
                                                    <Binding Path="dAlteracaoCusto"></Binding>
                                                    <Binding Path="DataContext.currentModel.nDiasSemAtualicao" 
                                                         RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <DataTrigger.Value>
                                                False
                                            </DataTrigger.Value>
                                            <Setter Property="Panel.Background" Value="Red"></Setter>

                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                        </DataGrid>
                    </DockPanel>                    
                </Grid>
            </Grid>
        </Expander>
    </DockPanel>
</runtime:WindowsBase>
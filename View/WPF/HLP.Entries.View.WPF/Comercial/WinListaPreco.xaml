<runtime:WindowsBase
        xmlns:runtime="clr-namespace:HLP.Components.View.WPF;assembly=HLP.Components.View.WPF"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"        
        xmlns:ccx="clr-namespace:HLP.Components.ViewModel.ViewModels;assembly=HLP.Components.ViewModel"
        xmlns:v="clr-namespace:HLP.Components.View.WPF.Validates;assembly=HLP.Components.View.WPF"
        xmlns:conv="clr-namespace:HLP.Components.View.WPF.Converter;assembly=HLP.Components.View.WPF"
        xmlns:convL ="clr-namespace:HLP.Entries.View.WPF.Comercial.Converter"
		xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:Components="clr-namespace:HLP.Components.View.WPF;assembly=HLP.Components.View.WPF" 
        xmlns:util="clr-namespace:HLP.Base.ClassesBases;assembly=HLP.Base"
        x:Class="HLP.Entries.View.WPF.GestãoAdministrativa.Comercial.WinListaPreco"
        Name="winListaPreco"        
        Title="Listas de Preço" Height="660" Width="1200" NameView="vwListaPrecoPai">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/HLP.Resources.View.WPF;component/Styles/Components/UserControlStyles.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <convL:ReadOnlyColumnsListaAutomaticaConverter x:Key="readOnlyConverter"></convL:ReadOnlyColumnsListaAutomaticaConverter>
            <conv:ComboBoxDisplayConverter x:Key="cbxDisplayConv"/>
            <convL:CanUserAddListaItensConverter x:Key="canUserAddListaItensConv"></convL:CanUserAddListaItensConverter>
            <ObjectDataProvider x:Key="odp" ObjectType="{x:Type ccx:FillComboBoxViewModel}"/>
            <ObjectDataProvider x:Key="lResultConversao" ObjectInstance="{StaticResource odp}" MethodName="GetAllValuesToComboBox">
                <ObjectDataProvider.MethodParameters>
                    <System:String>vwUnidadeMedidaToComboBox</System:String>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider x:Key="lresultFamiliaProduto" ObjectInstance="{StaticResource odp}" MethodName="GetAllValuesToComboBox">
                <ObjectDataProvider.MethodParameters>
                    <System:String>vwFamiliaProdutoToComboBox</System:String>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <conv:VisibilityVisibleToCollapsedNot x:Key="visibilityConverter"></conv:VisibilityVisibleToCollapsedNot>
            <conv:PorcentagemConverter x:Key="PorcentagemConverter"/>
            <conv:NotConverter x:Key="notConverter"/>
            <convL:RowDateListaPrecoConverter x:Key="RowDateConverter"/>
            <convL:StCustoProdutoConverter x:Key="StCustoProdutoConverter"/>
            <convL:IsEnabledCompMultiConverter x:Key="isEnabledMultiConverter"></convL:IsEnabledCompMultiConverter>
            <conv:MoedaConverter x:Key="moedaConverter"/>
            <util:BindingProxy x:Key="proxy" Data="{Binding}" />
            <convL:HeaderMarkupConverter x:Key="headerMarkupConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel LastChildFill="True">
        <TabControl>
            <TabItem Header="Principal">
                <AdornerDecorator>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="325*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="360*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <GridSplitter Grid.Row="1" HorizontalAlignment="Center" Height="2.5" VerticalAlignment="Stretch" ResizeDirection="Rows" Width="200" Background="#FF4774B5"/>
                        <DockPanel LastChildFill="True">
                            <StackPanel DockPanel.Dock="Top" Height="40" Margin="5,0,0,3" Orientation="Horizontal">
                                <!--<Components:HlpNavigation x:Name="navHierarquia" 
                                                          lIdsHierarquia="{Binding lIdsHierarquia}"
                                                          commButton="{Binding commandPesquisar}" 
                                                          selectedId="{Binding currentID}"></Components:HlpNavigation>-->
                            </StackPanel>
                            <Expander IsExpanded="True" Header="Principal" Style="{StaticResource ExpanderPadrao}" Focusable="False">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="10"></ColumnDefinition>
                                        <ColumnDefinition MinWidth="275" MaxWidth="275"></ColumnDefinition>
                                        <ColumnDefinition MaxWidth="110" MinWidth="110"></ColumnDefinition>
                                        <ColumnDefinition MaxWidth="30" MinWidth="30"></ColumnDefinition>
                                        <ColumnDefinition Width="50"></ColumnDefinition>
                                        <ColumnDefinition MaxWidth="175" MinWidth="175"></ColumnDefinition>
                                        <ColumnDefinition MaxWidth="110" MinWidth="110"></ColumnDefinition>
                                        <ColumnDefinition MaxWidth="30" MinWidth="30"></ColumnDefinition>
                                        <ColumnDefinition Width="50"></ColumnDefinition>
                                        <ColumnDefinition MinWidth="150" MaxWidth="150"></ColumnDefinition>
                                        <ColumnDefinition MaxWidth="90" MinWidth="90"></ColumnDefinition>
                                        <ColumnDefinition MaxWidth="150" MinWidth="150"/>
                                        <ColumnDefinition Width="10"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="10"></RowDefinition>
                                        <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                                        <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                                        <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                                        <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                                        <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                                        <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                                        <RowDefinition Height="Auto" MaxHeight="23"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <!--Label-->
                                    <Components:CustomTextBlock Grid.Column="1" Grid.Row="1" Text="Código"/>
                                    <Components:CustomTextBlock Grid.Column="1" Grid.Row="2" Text="Código Alternativo"/>
                                    <Components:CustomTextBlock Grid.Column="1" Grid.Row="3" Text="Descrição"/>
                                    <Components:CustomTextBlock Grid.Column="1" Grid.Row="4" Text="Data de Criação"/>
                                    <Components:CustomTextBlock Grid.Column="1" Grid.Row="5" Text="N.° dias sem Atualização no valor de custo"/>
                                    <Components:CustomTextBlock Grid.Column="1" Grid.Row="6" Text="Formação de Preço"></Components:CustomTextBlock>
                                    <Components:CustomTextBlock Grid.Column="5" Grid.Row="1" Text="É Contrato"/>
                                    <Components:CustomTextBlock Grid.Column="5" Grid.Row="2" Text="Nº do Contrato"/>
                                    <Components:CustomTextBlock Grid.Column="5" Grid.Row="3" Text="Data de validade da Lista"/>
                                    <Components:CustomTextBlock Grid.Column="5" Grid.Row="4" Text="Desconto Máximo"/>
                                    <Components:CustomTextBlock Grid.Column="5" Grid.Row="5" Text="Acréscimo Máximo"/>
                                    <Components:CustomTextBlock Grid.Column="5" Grid.Row="6" Text="Tipo de Atualização"/>
                                    <Components:CustomTextBlock Grid.Column="9" Grid.Row="1" Text="Lista de Preço Origem"/>
                                    <Components:CustomTextBlock Grid.Column="9" Grid.Row="2" Text="Percentual"/>
                                    <Components:CustomTextBlock Grid.Column="9" Grid.Row="3" Text="Lista Preferencial"></Components:CustomTextBlock>
                                    <Components:CustomTextBlock Grid.Column="9" Grid.Row="4" Text="Ativo ?"/>


                                    <Components:CustomTextBox
                                        stCompPosicao="fieldId"
                    Grid.Column="2" Grid.Row="1"
                    Text="{Binding currentModel.idListaPrecoPai, Mode=TwoWay}"
					IsReadOnly="True"
					ToolTip="Chave principal do registro da Origem de Venda"/>
                                    <Components:CustomTextBox    stCompPosicao="first"                                     
                    Grid.Column="2" Grid.Row="2"
                    Text="{Binding currentModel.xCodigoListaPreco, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bCompGeral}"
					ToolTip="Digite um código para a recém-criada Lista de preço"/>
                                    <Components:CustomTextBox    KeyUp="CustomTextBox_KeyUp"                                         
                    Grid.Column="2" Grid.Row="3"
                    Text="{Binding currentModel.xLista, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="Descrição da Lista de preço"/>
                                    <Components:HlpDatePicker
                            Grid.Column="2" Grid.Row="4" Height="20"
                            xTextDate="{Binding currentModel.dListaPreco, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                            IsEnabled="False"
                            stFormatoDtPicker="date"
                            Help="Este campo mostra a data em que a lista de preços foi gerada"/>
                                    <Components:CustomTextBox
                    Grid.Column="2" Grid.Row="5" 
                    Name="nDiasSemAtual"					
					Text="{Binding currentModel.nDiasSemAtualicao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"
					ToolTip="Muda a cor para vermelho no registro que não sofrem alteração no preço de custo a mais do que o número de dias estabelecido no campos"/>
                                    <Components:CustomComboBox x:Name="cbxMarkup" Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="6"
                                                   SelectedIndex="{Binding currentModel.stMarkup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                                   IsEnabled="{Binding bIsEnabled}">
                                        <Components:CustomComboBox.Items>
                                            <ComboBoxItem>0 – Margem Bruta (Default)</ComboBoxItem>
                                            <ComboBoxItem>1 – Mark-up</ComboBoxItem>
                                        </Components:CustomComboBox.Items>
                                    </Components:CustomComboBox>
                                    <Components:CustomCheckBox
                            x:Name="cbContrato"
                    Grid.Column="6" Grid.Row="1"
                    IsChecked="{Binding currentModel.stContrato, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"                       			
					IsEnabled="{Binding bCompGeral}"/>
                                    <Components:CustomTextBox
                            Grid.Column="6" Grid.Row="2"
                    Text="{Binding currentModel.xNrContrato, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                        <Components:CustomTextBox.IsEnabled>
                                            <MultiBinding Converter="{StaticResource isEnabledMultiConverter}"
                  ConverterParameter="cb">
                                                <Binding Path="bCompGeral"/>
                                                <Binding ElementName="cbContrato" Path="IsChecked"/>
                                            </MultiBinding>
                                        </Components:CustomTextBox.IsEnabled>
                                    </Components:CustomTextBox>
                                    <Components:HlpDatePicker   
                            stFormatoDtPicker="date"
                            Grid.Column="6" Grid.Row="3" Grid.ColumnSpan="1" Height="20"
                            IsEnabled="{Binding bCompListaAut}"
                            xTextDate="{Binding currentModel.dValidadeContrato, 
                            Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                            />
                                    <Components:CustomTextBox
                    Grid.Column="6" Grid.Row="4" 
                    Text="{Binding currentModel.pDescontoMaximo, Mode=TwoWay, 
                    Converter={StaticResource PorcentagemConverter},
                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"/>
                                    <Components:CustomTextBox
                    Grid.Column="6" Grid.Row="5"
                    Text="{Binding currentModel.pAcressimoMaximo, Mode=TwoWay, 
                    Converter={StaticResource PorcentagemConverter},
                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bIsEnabled}"/>
                                    <Components:CustomComboBox
                    Grid.Column="6" Grid.Row="6" Grid.ColumnSpan="2"
                    Name="cbxStAtualizacao"					
					SelectedIndex="{Binding currentModel.stAtualizacao, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
					IsEnabled="{Binding bCompGeral}"
					ToolTip="Informar o tipo de atualização para o campo Preço de Venda para essa lista de preço, elas podem ser Manual ou Automática." SelectionChanged="cbxStAtualizacao_UCSelectionChanged">
                                        <Components:CustomComboBox.Items>
                                            <System:String>0-Automatica</System:String>
                                            <System:String>1-Manual</System:String>
                                        </Components:CustomComboBox.Items>
                                    </Components:CustomComboBox>
                                    <Components:CustomPesquisa 
					                        Grid.Column="10" Grid.Row="1"
					                        xIdPesquisa="{Binding currentModel.idListaPrecoOrigem, Mode=TwoWay, 
                                            NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"					
					                        ToolTip="Informar qual é a Lista de Preço Origem quando a Lista for automática, o campo só é disponibilizado quando a lista for automática." FieldPesquisa="ID" TableView="vwListaPrecoPai" Grid.ColumnSpan="2">
                                        <Components:CustomPesquisa.Items>
                                            <System:String>xCodigoListaPreco</System:String>
                                            <System:String>xLista</System:String>
                                        </Components:CustomPesquisa.Items>
                                        <Components:CustomPesquisa.IsEnabled>
                                            <MultiBinding Converter="{StaticResource isEnabledMultiConverter}"
                  ConverterParameter="cbx">
                                                <Binding Path="bCompGeral"/>
                                                <Binding ElementName="cbxStAtualizacao" Path="SelectedIndex"/>
                                            </MultiBinding>
                                        </Components:CustomPesquisa.IsEnabled>
                                    </Components:CustomPesquisa>
                                    <Components:CustomTextBox
                    Grid.Column="10" Grid.Row="2" 
                    x:Name="txtPercentual"                	                        
					Text="{Binding currentModel.pPercentual, Mode=TwoWay,
                        Converter={StaticResource PorcentagemConverter},
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"					     
                        ToolTip="Este campo serve para se definir o % de acréscimo (valor positivo) ou % de desconto (valor negativo) para a lista que está sendo mostrada na tela e definida como automática, porém para este tipo de cálculo o sistema pegará sempre como base a lista 00001.">
                                        <Components:CustomTextBox.IsEnabled>
                                            <MultiBinding Converter="{StaticResource isEnabledMultiConverter}"
                  ConverterParameter="cbx">
                                                <Binding Path="bCompListaManual"/>
                                                <Binding ElementName="cbxStAtualizacao" Path="SelectedIndex"/>
                                            </MultiBinding>
                                        </Components:CustomTextBox.IsEnabled>
                                    </Components:CustomTextBox>
                                    <Components:CustomCheckBox Grid.Column="10" Grid.Row="3"                                          
                    IsEnabled="{Binding bIsEnabled}"
                    IsChecked="{Binding currentModel.stPreferencial, Mode=TwoWay, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                    </Components:CustomCheckBox>
                                    <Components:CustomCheckBox
                                        Grid.Column="10" Grid.Row="4" stCompPosicao="last"
                                        IsChecked="{Binding currentModel.Ativo, Mode=TwoWay, 
                                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
				                        IsEnabled="{Binding bIsEnabled}"/>
                                    <Button Grid.Column="10" Grid.Row="5"
                                        IsEnabled="{Binding bCompListaManual}"
                                        Command="{Binding gerarListaCommand}"
                                        Content="Gerar Lista"/>
                                </Grid>
                            </Expander>
                        </DockPanel>
                        <Expander Grid.Row="2" IsExpanded="True" Header="Produtos" Style="{StaticResource ExpanderPadrao}">
                            <DockPanel>
                                <StackPanel Height="30" Margin="0,0,0,5" Visibility="{Binding visAumentoVlr}" HorizontalAlignment="Left" Orientation="Horizontal" DockPanel.Dock="Top">
                                    <Components:CustomComboBox Width="150" Margin="10,0,10,0" SelectedIndex="{Binding byteIndex, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBoxItem>Preço de Venda</ComboBoxItem>
                                        <ComboBoxItem>Custo do Produto</ComboBoxItem>
                                    </Components:CustomComboBox>
                                    <Components:CustomTextBlock Margin="10,0,10,0" >% de reajuste</Components:CustomTextBlock>
                                    <Components:CustomTextBox Margin="10,0,10,0" Width="80" IsEnabled="True"
                                                              Text="{Binding dPorcAumento, Converter={StaticResource PorcentagemConverter}}"></Components:CustomTextBox>
                                    <Button Margin="10,0,10,0" Width="50" Command="{Binding ConfAumVlrVendaCommand}">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Border CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                    <Image x:Name="ImageAdd">
                                                        <Image.Style>
                                                            <Style TargetType="{x:Type Image}">
                                                                <Setter Property="Source" Value="pack://application:,,,/HLP.Comum.Resources;component/Icones/Confirmar_Preto.png"/>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Source" Value="pack://application:,,,/HLP.Comum.Resources;component/Icones/Confirmar_MouseOver.png"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </Border>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                    <Button Margin="10,0,1,0" Width="50" Command="{Binding CancAumVlrVendaCommand}">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Border CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                    <Image x:Name="ImageAdd">
                                                        <Image.Style>
                                                            <Style TargetType="{x:Type Image}">
                                                                <Setter Property="Source" Value="pack://application:,,,/HLP.Comum.Resources;component/Icones/Cancelar_Preto.png"/>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Source" Value="pack://application:,,,/HLP.Comum.Resources;component/Icones/Cancelar_MouseOver.png"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </Border>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                </StackPanel>
                                <Components:CustomDataGrid
                                    EnableColumnVirtualization="True" EnableRowVirtualization="True" Name="gridItens"
                                    ItemsSource="{Binding currentModel.lLista_preco, IsAsync=True}"                                    
                                    IsReadOnly="{Binding bIsEnabled, Converter={StaticResource notConverter}}"
                                    AutoGenerateColumns="False" SelectionUnit="CellOrRowHeader" CanUserReorderColumns="False"
                                    lastColumn="{Binding ElementName=clUnidMedida}">
                                    <Components:CustomDataGrid.Resources>
                                        <conv:decimalValueConverter x:Key="decimalValueConv"></conv:decimalValueConverter>
                                    </Components:CustomDataGrid.Resources>
                                    <Components:CustomDataGrid.CanUserDeleteRows>
                                        <MultiBinding Converter="{StaticResource canUserAddListaItensConv}">
                                            <Binding Path="visAumentoVlr"></Binding>
                                            <Binding ElementName="cbxStAtualizacao" Path="SelectedIndex"></Binding>
                                        </MultiBinding>
                                    </Components:CustomDataGrid.CanUserDeleteRows>
                                    <Components:CustomDataGrid.CanUserAddRows>
                                        <MultiBinding Converter="{StaticResource canUserAddListaItensConv}">
                                            <Binding Path="visAumentoVlr"></Binding>
                                            <Binding ElementName="cbxStAtualizacao" Path="SelectedIndex"></Binding>
                                        </MultiBinding>
                                    </Components:CustomDataGrid.CanUserAddRows>
                                    <Components:CustomDataGrid.BindingGroup>
                                        <BindingGroup NotifyOnValidationError="True">
                                            <BindingGroup.ValidationRules>
                                                <v:ListUniqueValuesValidationRule                                
                                ValidatesOnTargetUpdated="True"                                
                                xCampos="idProduto"></v:ListUniqueValuesValidationRule>
                                            </BindingGroup.ValidationRules>
                                        </BindingGroup>
                                    </Components:CustomDataGrid.BindingGroup>
                                    <Components:CustomDataGrid.Columns>
                                        <DataGridCheckBoxColumn Binding="{Binding bChecked}"
                                                        Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}}"
                                                        >
                                            <DataGridCheckBoxColumn.HeaderTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding Data.bCheckAll, Source={StaticResource proxy}}"></CheckBox>
                                                </DataTemplate>
                                            </DataGridCheckBoxColumn.HeaderTemplate>
                                        </DataGridCheckBoxColumn>
                                        <Components:CustomDataGridIntellisenseColumn xFieldsToDisplay="idProduto;xPesquisa"                                           
                                        Header="Produtos" Binding="{Binding Path=idProduto}"
                                           xNamePropertyModel="objProduto"
                                            refMethod="{Binding Path=Data.getProduto, Source={StaticResource proxy}}"
                                            xNameView="vwProdutoqs" NameWindowCadastro="WinProduto" TableView="vwProduto">
                                        </Components:CustomDataGridIntellisenseColumn>
                                        <DataGridComboBoxColumn IsReadOnly="True" Header="Unidade de Medida" ItemsSource="{Binding Source={StaticResource lResultConversao}}"
                                                                DisplayMemberPath="display"
                                                                SelectedValuePath="id"
                                                                SelectedValueBinding="{Binding selectedIdUnidadeVenda}"
                                                                ></DataGridComboBoxColumn>
                                        <DataGridComboBoxColumn IsReadOnly="True" Header="Família de Produto" ItemsSource="{Binding Source={StaticResource lresultFamiliaProduto}}"
                                                                DisplayMemberPath="display"
                                                                SelectedValuePath="id"
                                                                SelectedValueBinding="{Binding selectedIdFamiliaProduto}"                                                                
                                                                ></DataGridComboBoxColumn>
                                        <DataGridTextColumn                                
                                Header="Custo Produto" Width="100"                                
                                ElementStyle="{StaticResource CellErrorStyle}"                                
                                Binding="{Binding Path=vCustoProduto, UpdateSourceTrigger=LostFocus, Mode=TwoWay,
                                Converter={StaticResource moedaConverter},
                                NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                    IsReadOnly="{Binding Data.currentModel.stAtualizacao, Source={StaticResource proxy}, Converter={StaticResource readOnlyConverter}}">
                                            <DataGridTextColumn.EditingElementStyle>
                                                <Style TargetType="TextBox">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=objProduto, Converter={StaticResource StCustoProdutoConverter}}" Value="False">
                                                            <Setter Property="IsReadOnly" Value="True"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.EditingElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="% Desconto" Width="120"
                                    IsReadOnly="{Binding Data.currentModel.stAtualizacao, Source={StaticResource proxy}, Converter={StaticResource readOnlyConverter}}"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pDesconto, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                        <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="% Comissão" Width="120"
                                    IsReadOnly="{Binding Data.currentModel.stAtualizacao, Source={StaticResource proxy}, Converter={StaticResource readOnlyConverter}}"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissao, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                        <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="% Outros" Width="120"
                                    IsReadOnly="{Binding Data.currentModel.stAtualizacao, Source={StaticResource proxy}, Converter={StaticResource readOnlyConverter}}"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pOutros, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                        <DataGridTextColumn Visibility="{Binding ElementName=winListaPreco, Path=DataContext.visAumentoVlr, Converter={StaticResource visibilityConverter}}"                               
                                        Header="% Lucro" Width="100"
                                                    IsReadOnly="{Binding Data.currentModel.stAtualizacao, Source={StaticResource proxy}, Converter={StaticResource readOnlyConverter}}"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pLucro, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        >
                                        </DataGridTextColumn>
                                        <DataGridTextColumn                                
                                Header="Valor Venda" Width="100"
                                ElementStyle="{StaticResource CellErrorStyle}"
                                    IsReadOnly="{Binding Data.currentModel.stAtualizacao, Source={StaticResource proxy}, Converter={StaticResource readOnlyConverter}}"
                                Binding="{Binding Path=vVenda, UpdateSourceTrigger=LostFocus,
                                StringFormat={}{0:C},
                                NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                ></DataGridTextColumn>
                                        <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="% Desc. Máx." Width="100"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pDescontoMaximo, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                        <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="% Acréc. Máx." Width="100"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pAcrescimoMaximo, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                        <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="% Comissão à Vista" Width="120"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissaoAvista, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                        <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="% Comissão à Prazo" Width="120"
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pComissaoAprazo, UpdateSourceTrigger=LostFocus,
                                            Converter={StaticResource PorcentagemConverter},
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        ></DataGridTextColumn>
                                        <DataGridTextColumn 
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                        Header="{Binding Data.currentModel.stMarkup, Source={StaticResource proxy}, Converter={StaticResource headerMarkupConverter}}" Width="120" IsReadOnly="True"                                        
                                            ElementStyle="{StaticResource CellErrorStyle}"
                                        Binding="{Binding Path=pMarkup, UpdateSourceTrigger=LostFocus, Converter={StaticResource decimalValueConv}, ConverterParameter=4,
                                            NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        >
                                        </DataGridTextColumn>
                                        <DataGridTemplateColumn 
                                    IsReadOnly="{Binding Data.currentModel.stAtualizacao, Source={StaticResource proxy}, Converter={StaticResource readOnlyConverter}}"
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                    x:Name="dtAlterCusto" Header="Data Alteração Custo">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=dAlteracaoCusto}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                            <DataGridTemplateColumn.CellEditingTemplate>
                                                <DataTemplate>
                                                    <Grid FocusManager.FocusedElement="{Binding ElementName=dateScheduledPicker}" >
                                                        <Components:HlpDatePicker x:Name="dateScheduledPicker"
                                                            xTextDate="{Binding Path=dAlteracaoCusto, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnExceptions=true, NotifyOnValidationError=true}">
                                                        </Components:HlpDatePicker>
                                                    </Grid>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellEditingTemplate>
                                        </DataGridTemplateColumn>
                                        <Components:CustomDataGridIntellisenseColumn Binding="{Binding Path=idUnidadeMedida}" xFieldsToDisplay="idUnidadeMedida;xSiglaPadrao;xUnidadeMedida"
                                            IsReadOnly="{Binding Data.currentModel.stAtualizacao, Source={StaticResource proxy}, Converter={StaticResource readOnlyConverter}}"
                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}, Converter={StaticResource visibilityConverter}}"
                                    x:Name="clUnidMedida" Header="Unidade Medida" Width="150" xNameView="vwUnidadeMedidaqs"
                                            NameWindowCadastro="WinUnidadeMedida" TableView="vwUnidadeMedida" refMethod="{Binding Path=Data.getUnidadeMedida, Source={StaticResource proxy}}"
                                                                                     >
                                        </Components:CustomDataGridIntellisenseColumn>
                                        <DataGridTextColumn Binding="{Binding vlrEsperado, Converter={StaticResource moedaConverter}}" 
                                                    Header="Vlr. Final" 
                                                    Visibility="{Binding Data.visAumentoVlr, Source={StaticResource proxy}}"
                                                    >
                                        </DataGridTextColumn>
                                    </Components:CustomDataGrid.Columns>
                                    <Components:CustomDataGrid.RowStyle>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger>
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource RowDateConverter}">
                                                            <Binding Path="dAlteracaoCusto"></Binding>
                                                            <Binding Path="DataContext.currentModel.nDiasSemAtualicao" 
                                                         RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}"/>
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <DataTrigger.Value>
                                                        False
                                                    </DataTrigger.Value>
                                                    <Setter Property="Panel.Background">
                                                        <Setter.Value>
                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                <GradientStop Color="#FF9E3A24" Offset="1"/>
                                                                <GradientStop Color="#FF9E3A24"/>
                                                                <GradientStop Color="#FFE06D6D" Offset="0.5"/>
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="TextElement.Foreground" Value="White"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Components:CustomDataGrid.RowStyle>
                                </Components:CustomDataGrid>
                            </DockPanel>
                        </Expander>
                    </Grid>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="Hierarquia" GotFocus="TabItem_GotFocus">
                <AdornerDecorator>
                    <ContentControl Content="{ Binding Path=hierarquiaListaPreco, Mode=OneWay}"></ContentControl>
                </AdornerDecorator>
            </TabItem>
        </TabControl>
    </DockPanel>
</runtime:WindowsBase>
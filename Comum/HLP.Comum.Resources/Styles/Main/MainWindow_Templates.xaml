<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:Util="clr-namespace:HLP.Comum.Resources" 
                    xmlns:local="clr-namespace:HLP.Comum.Resources.Converter"
                    xmlns:wpfTool="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
                    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing">
    
    <!--Colors for Styles-->

    <SolidColorBrush x:Key="BlueStandard" Color="#FF4774B5"/>
    <SolidColorBrush x:Key="BorderBrushMouseOverButton" Color="#FF4984D8"/>
    <SolidColorBrush x:Key="MouseOverButtonYellow" Color="#FFFFD35B"/>
    <SolidColorBrush x:Key="WhiteButton" Color="White"/>
    <SolidColorBrush x:Key="EnabledFalseGrayButton" Color="Gray"/>
    <SolidColorBrush x:Key="MouseOverForegroundBlack" Color="Black"/>
    
    <!--Style Arrow HlpButtonNavigation-->

    <Style x:Key="ImageStyleButtonNavigation" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="pack://application:,,,/HLP.Comum.Resources;component/Icones/Arrow_Navigation.png"/>        
    </Style>
    
    <!--Style Button HlpButtonNavigation-->
    
    <Style x:Key="ButtonStyleButtonNavigation" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" BorderBrush="{x:Null}" BorderThickness="0.5" Background="Transparent" CornerRadius="4">
                        <ContentPresenter x:Name="Content" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False" Margin="0,0,3,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource MouseOverButtonYellow}" TargetName="Border"/>
                            <Setter Property="TextElement.Foreground" Value="{StaticResource MouseOverForegroundBlack}" TargetName="Content"/>
                            <Setter Property="BorderBrush" Value="{StaticResource MouseOverButtonYellow}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource EnabledFalseGrayButton}" TargetName="Content"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="TextElement.FontWeight" Value="SemiBold" TargetName="Content"/>
                        </Trigger>                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Style Arrow Navigation Left HlpNavigation-->

    <ControlTemplate x:Key="ButtonArrowNavigationLeft" TargetType="{x:Type Button}">
        <Border Height="15" Width="15" BorderBrush="{x:Null}" Background="Transparent">                       
                <Image x:Name="ImagemContextMenu">
                    <Image.Style>
                    <Style TargetType="{x:Type Image}">
                        <Setter Property="Source" Value="pack://application:,,,/HLP.Comum.Resources;component/Icones/ArrowNavigationLeft.png"/>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="pack://application:,,,/HLP.Comum.Resources;component/Icones/ArrowNavigationLeftDisabled.png"/>
                            </Trigger>
                        </Style.Triggers>
                     </Style>
                    </Image.Style>
                </Image>          
        </Border>
    </ControlTemplate>    
    
    <!--Style Arrow Navigation Right HlpNavigation-->

    <ControlTemplate x:Key="ButtonArrowNavigationRight" TargetType="{x:Type Button}">
        <Border Height="15" Width="15" BorderBrush="{x:Null}" Background="Transparent">
            <Image x:Name="ImagemContextMenu">
                <Image.Style>
                    <Style TargetType="{x:Type Image}">
                        <Setter Property="Source" Value="pack://application:,,,/HLP.Comum.Resources;component/Icones/ArrowNavigationRight.png"/>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="pack://application:,,,/HLP.Comum.Resources;component/Icones/ArrowNavigationRightDisabled.png"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Border>
    </ControlTemplate>   
    
    
    <!--Versao-->

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30" Background="#FF4361A0" BorderBrush="White">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontFamily="Calibri" TextElement.FontSize="10" TextElement.Foreground="White" TextElement.FontWeight="Black"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
    <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" TextElement.Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

	<Style x:Key="ButtonArrowNavigation" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">						
							<ed:BlockArrow HorizontalAlignment="Left" Height="16" Orientation="Right" VerticalAlignment="Top" Width="20" Fill="{StaticResource WhiteStandard}"/>
						</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
    
</ResourceDictionary>